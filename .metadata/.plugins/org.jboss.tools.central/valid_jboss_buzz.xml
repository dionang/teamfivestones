<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Announcing .NET Core 2.1 for Red Hat Platforms</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/aUpfi5Mos60/" /><category term=".NET Core" /><category term="C#" /><category term="Containers" /><category term="Developer Tools" /><category term="Microservices" /><category term="Modern App Dev" /><category term=".NET" /><category term="containers" /><category term="microservices" /><category term="OpenShift Container Platform" /><category term="Red Hat OpenShift" /><author><name>Bob Davis</name></author><id>https://developers.redhat.com/blog/?p=498747</id><updated>2018-06-14T16:29:50Z</updated><published>2018-06-14T16:29:50Z</published><content type="html">&lt;p&gt;&lt;span style="font-weight: 400"&gt;We are very pleased to announ&lt;/span&gt;&lt;span style="font-weight: 400"&gt;ce the general availability of .NET Core 2.1 for Red Hat Enterprise Linux and OpenShift platforms!&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400"&gt;.NET Core is the open-source, cross-platform .NET platform for building microservices. .NET Core is designed to provide the best performance at scale for applications that use microservices and containers. Libraries can be shared with other .NET platforms, such as .NET Framework (Windows) and Xamarin (mobile applications). With .NET Core you have the flexibility of building and deploying applications on Red Hat Enterprise Linux or in containers. Your container-based applications and microservices can easily be deployed to your choice of public or private clouds using Red Hat OpenShift. All of the features of OpenShift and Kubernetes for cloud deployments are available to you.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400"&gt;.NET Core 2.1 continues to broaden its support and tools for microservice development in an open source environment. The latest version of .NET Core includes the following improvements:&lt;/span&gt;&lt;span id="more-498747"&gt;&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Improved build performance&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Improved runtime performance&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Improved networking performance&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;The new &lt;code&gt;Span&amp;#60;T&amp;#62;&lt;/code&gt; based APIs for reducing allocations&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Extended Cryptography APIs&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;API Support for Brotli compression&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;A new way of deploying tools as NuGet Packages&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span style="font-weight: 400"&gt;This release further reduces platform differences between Windows and Linux.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400"&gt;As usual, .NET Core 2.1 is available via &lt;/span&gt;&lt;a href="https://developers.redhat.com/products/dotnet/hello-world/"&gt;&lt;span style="font-weight: 400"&gt;traditional “yum” install&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400"&gt; (rh-dotnet21) or in containers through our &lt;/span&gt;&lt;a href="https://access.redhat.com/containers/#/search/dotnet"&gt;&lt;span style="font-weight: 400"&gt;container catalog&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400"&gt;.&lt;/span&gt;&lt;/p&gt; &lt;h3&gt;&lt;span style="font-weight: 400"&gt;Release and support information&lt;/span&gt;&lt;/h3&gt; &lt;p&gt;&lt;span style="font-weight: 400"&gt;Developers may use .NET Core 2.1 to develop and deploy applications on:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Red Hat Enterprise Linux&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Red Hat Enterprise Linux Atomic Host&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Red Hat OpenShift Container Platform  &lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Red Hat OpenShift Online&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Red Hat OpenShift Dedicated&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Red Hat OpenStack Platform&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span style="font-weight: 400"&gt;Following a small number of significant releases in the next few months, .NET Core 2.1 is expected to switch to long-term support (LTS) release as described in the &lt;/span&gt;&lt;a href="https://access.redhat.com/support/policy/updates/net-core"&gt;&lt;span style="font-weight: 400"&gt;Red Hat’s lifecycle documentation&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400"&gt;. This means that critical updates addressing security and reliability will be offered for 3 years. &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400"&gt;For more information, please visit the following:&lt;/span&gt;&lt;/p&gt; &lt;ol&gt; &lt;li style="font-weight: 400"&gt;&lt;a href="https://access.redhat.com/documentation/en-us/net_core/2.1/html-single/getting_started_guide/index"&gt;&lt;span style="font-weight: 400"&gt;Get Started with .NET Core 2.1!&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Visit &lt;/span&gt;&lt;a href="http://redhatloves.net/"&gt;&lt;span style="font-weight: 400"&gt;RedHatLoves.NET&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;The Red Hat Developer Program &lt;/span&gt;&lt;a href="https://developers.redhat.com/products/dotnet/overview/"&gt;&lt;span style="font-weight: 400"&gt;technology page on .NET Core&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400"&gt;.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Red Hat Developer &lt;/span&gt;&lt;a href="https://developers.redhat.com/blog/category/programming/dot-net/"&gt;&lt;span style="font-weight: 400"&gt;blogs&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400"&gt; on .NET Core&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;a href="https://access.redhat.com/documentation/en-us/net_core/2.1/"&gt;&lt;span style="font-weight: 400"&gt;Product Documentation for .NET Core&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&lt;span style="font-weight: 400"&gt;For complete information on the updates and changes made in this release, &lt;/span&gt;&lt;a href="https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.0.md"&gt;&lt;span style="font-weight: 400"&gt;please visit the project page on GitHub&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400"&gt;. Any important differences between Red Hat’s official source build and other builds that are available will be &lt;/span&gt;&lt;a href="https://access.redhat.com/documentation/en-us/net_core/2.1/"&gt;&lt;span style="font-weight: 400"&gt;detailed in our release notes&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400"&gt;. &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fannouncing-net-core-2-1-for-red-hat-platforms%2F&amp;#38;linkname=Announcing%20.NET%20Core%202.1%20for%20Red%20Hat%20Platforms" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fannouncing-net-core-2-1-for-red-hat-platforms%2F&amp;#38;linkname=Announcing%20.NET%20Core%202.1%20for%20Red%20Hat%20Platforms" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fannouncing-net-core-2-1-for-red-hat-platforms%2F&amp;#38;linkname=Announcing%20.NET%20Core%202.1%20for%20Red%20Hat%20Platforms" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fannouncing-net-core-2-1-for-red-hat-platforms%2F&amp;#38;linkname=Announcing%20.NET%20Core%202.1%20for%20Red%20Hat%20Platforms" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fannouncing-net-core-2-1-for-red-hat-platforms%2F&amp;#38;linkname=Announcing%20.NET%20Core%202.1%20for%20Red%20Hat%20Platforms" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fannouncing-net-core-2-1-for-red-hat-platforms%2F&amp;#38;linkname=Announcing%20.NET%20Core%202.1%20for%20Red%20Hat%20Platforms" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fannouncing-net-core-2-1-for-red-hat-platforms%2F&amp;#38;linkname=Announcing%20.NET%20Core%202.1%20for%20Red%20Hat%20Platforms" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fannouncing-net-core-2-1-for-red-hat-platforms%2F&amp;#38;linkname=Announcing%20.NET%20Core%202.1%20for%20Red%20Hat%20Platforms" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fannouncing-net-core-2-1-for-red-hat-platforms%2F&amp;#38;title=Announcing%20.NET%20Core%202.1%20for%20Red%20Hat%20Platforms" data-a2a-url="https://developers.redhat.com/blog/2018/06/14/announcing-net-core-2-1-for-red-hat-platforms/" data-a2a-title="Announcing .NET Core 2.1 for Red Hat Platforms"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/06/14/announcing-net-core-2-1-for-red-hat-platforms/"&gt;Announcing .NET Core 2.1 for Red Hat Platforms&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/aUpfi5Mos60" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;.NET Core 2.1 is now available for Red Hat Enterprise Linux and OpenShift platforms! .NET Core is the open-source, cross-platform .NET platform for building microservices. .NET Core is designed to provide the best performance at scale.&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/06/14/announcing-net-core-2-1-for-red-hat-platforms/"&gt;Announcing .NET Core 2.1 for Red Hat Platforms&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/06/14/announcing-net-core-2-1-for-red-hat-platforms/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">498747</post-id><dc:creator>Bob Davis</dc:creator><dc:date>2018-06-14T16:29:50Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/06/14/announcing-net-core-2-1-for-red-hat-platforms/</feedburner:origLink></entry><entry><title>Debugging Memory Issues with Open vSwitch DPDK</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ZoZS5zLebLI/" /><category term="OpenStack" /><category term="Red Hat Enterprise Linux" /><category term="debugging" /><category term="dpdk" /><category term="fast datapath" /><category term="hugepages" /><category term="networking" /><category term="NFV" /><category term="Open vSwitch" /><category term="openvswitch" /><category term="ovs-dpdk" /><category term="Virtualization" /><author><name>Kevin Traynor</name></author><id>https://developers.redhat.com/blog/?p=500667</id><updated>2018-06-14T11:00:48Z</updated><published>2018-06-14T11:00:48Z</published><content type="html">&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt; &lt;p&gt;This article is about debugging out-of-memory issues with &lt;a href="http://docs.openvswitch.org/en/latest/intro/install/dpdk/"&gt;Open vSwitch with the Data Plane Development Kit&lt;/a&gt; (OvS-DPDK). It explains the situations in which you can run out of memory when using OvS-DPDK and it shows the log entries that are produced in those circumstances. It also shows some other log entries and commands for further debugging.&lt;/p&gt; &lt;p&gt;When you finish reading this article, you will be able to identify that you have an out-of-memory issue and you&amp;#8217;ll know how to fix it. Spoiler: Usually having some more memory on the relevant NUMA node works. It is based on OvS 2.9.&lt;/p&gt; &lt;p&gt;&lt;span id="more-500667"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2 id="background"&gt;Background&lt;/h2&gt; &lt;p&gt;As is normal with DPDK-type applications, it is expected that hugepage memory has been set up and mounted. For further information see &lt;a href="http://docs.openvswitch.org/en/latest/intro/install/dpdk/?highlight=hugepage#setup-hugepages"&gt;set up huge pages&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The next step is to specify the amount of memory pre-allocated for OvS-DPDK. This is done using the Open vSwitch Database (OVSDB). In the case below, 4GB of huge-page memory is pre-allocated on NUMA node 0 and NUMA node 1.&lt;/p&gt; &lt;pre&gt;# ovs-vsctl --no-wait set Open_vSwitch . other_config:dpdk-socket-mem=4096,4096&lt;/pre&gt; &lt;p&gt;The default is 1GB for NUMA 0 if &lt;code&gt;dpdk-socket-mem&lt;/code&gt; is not specified.&lt;/p&gt; &lt;p&gt;Now, let&amp;#8217;s look at the times when we can run out of memory.&lt;/p&gt; &lt;h2 id="initialization"&gt;Initialization&lt;/h2&gt; &lt;p&gt;You can run out of memory when DPDK is initialized, which happens when &lt;code&gt;ovs-vswitchd&lt;/code&gt; is running and the OVSDB entry &lt;code&gt;dpdk-init&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;A useful log entry to watch for during initialization is this:&lt;/p&gt; &lt;pre&gt;|dpdk|INFO|EAL ARGS: ovs-vswitchd -c 0x1 --socket-mem 4096,4096&lt;/pre&gt; &lt;p&gt;This will confirm that the &lt;code&gt;dpdk-socket-mem&lt;/code&gt; you &lt;em&gt;thought&lt;/em&gt; you were setting was actually set and passed to DPDK (thus avoiding the embarrassment of someone else pointing out that your scripts were wrong).&lt;/p&gt; &lt;p&gt;The most likely way to run out of memory during initialization is that huge page memory was not set up correctly:&lt;/p&gt; &lt;pre&gt;|dpdk|INFO|EAL ARGS: ovs-vswitchd -c 0x1 --socket-mem 4096,4096 |dpdk|INFO|EAL: 32 hugepages of size 1073741824 reserved, but no mounted hugetlbfs found for that size&lt;/pre&gt; &lt;p&gt;Another way is that you are requesting too much memory:&lt;/p&gt; &lt;pre&gt;|dpdk|INFO|EAL ARGS: ovs-vswitchd -c 0x1 --socket-mem 32768,0 |dpdk|ERR|EAL: Not enough memory available on socket 0! Requested: 32768MB, available: 16384MB&lt;/pre&gt; &lt;p&gt;Or you request none at all:&lt;/p&gt; &lt;pre&gt;|dpdk|INFO|EAL ARGS: ovs-vswitchd -c 0x1 --socket-mem 0,0 |dpdk|ERR|EAL: invalid parameters for --socket-mem&lt;/pre&gt; &lt;p&gt;All these issues can be fixed by correctly setting up huge pages and requesting to pre-allocate an appropriate amount.&lt;/p&gt; &lt;h2 id="adding-a-port-changing-mtu"&gt;Adding a Port or Changing the MTU&lt;/h2&gt; &lt;p&gt;These situations are grouped together because they can both result in a new pool of buffers being requested for a port. Where possible, these pools of buffers will be shared and reused, but that is not always possible due to differing port NUMA nodes or MTUs.&lt;/p&gt; &lt;p&gt;For new requests, the size of each buffer is fixed (MTU-based) but the number of buffers can be variable and OvS-DPDK will retry for a lower number of buffers if there is not enough memory for initial requests.&lt;/p&gt; &lt;p&gt;When DPDK cannot provide the requested memory to any one of the requests, it reports the following:&lt;/p&gt; &lt;pre&gt;|dpdk|ERR|RING: Cannot reserve memory&lt;/pre&gt; &lt;p&gt;While that may look serious, it&amp;#8217;s nothing to worry about because OvS handles this and simply retries for a lower amount. If however, the retries do not work then the following will be in the log:&lt;/p&gt; &lt;pre&gt;|netdev_dpdk|ERR|Failed to create memory pool for netdev dpdk0, with MTU 9000 on socket 0: Cannot allocate memory&lt;/pre&gt; &lt;p&gt;This case is an issue for functionality.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;If you were adding a port, it will not be usable.&lt;/li&gt; &lt;li&gt;If you were changing the MTU, the MTU change fails but the port will continue to operate with the previous MTU.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;How can you fix these errors? The general guide would be just to give OvS-DPDK more memory on the relevant NUMA node, or stick with a lower MTU.&lt;/p&gt; &lt;h2 id="starting-a-vm"&gt;Starting a VM&lt;/h2&gt; &lt;p&gt;It doesn&amp;#8217;t seem obvious why you would run out of memory when starting a VM, as opposed to when you are adding a vhost port for it (previous section). The key is vhost NUMA reallocation.&lt;/p&gt; &lt;p&gt;When a VM is started, DPDK checks the NUMA node of the memory shared from the guest. This may result in requesting a new pool of buffers from the same NUMA node. But of course, there might be no memory pre-allocated with &lt;code&gt;dpdk-socket-mem&lt;/code&gt; on that NUMA node, or else there might be insufficient memory left.&lt;/p&gt; &lt;p&gt;The log entry would be similar to the add port/change MTU cases:&lt;/p&gt; &lt;pre&gt;|netdev_dpdk|ERR|Failed to create memory pool for netdev vhost0, with MTU 1500 on socket 1: Cannot allocate memory&lt;/pre&gt; &lt;p&gt;The fix for this is having enough memory on the relevant NUMA node, or changing the libvirt/QEMU settings so VM memory is from a different NUMA node.&lt;/p&gt; &lt;h2 id="runtimeadding-a-portadding-queues"&gt;Runtime, Adding a Port, or Adding Queues&lt;/h2&gt; &lt;p&gt;Didn&amp;#8217;t we already cover &lt;em&gt;adding a port?&lt;/em&gt; Yes, we did; however, this section is for when we get a requested pool of buffers, but some time later that proves to be insufficient.&lt;/p&gt; &lt;p&gt;This might be because there are many ports and queues sharing a pool of buffers and by the time some buffers are reserved for Rx queues, some are in flight processing and some are waiting to be returned from Tx queues, so there just aren&amp;#8217;t enough buffers to go around.&lt;/p&gt; &lt;p&gt;For example, the log entries when this occurs while using a physical NIC could look like this:&lt;/p&gt; &lt;pre&gt;|dpdk|ERR|PMD: ixgbe_alloc_rx_queue_mbufs(): RX mbuf alloc failed queue_id=0 |dpdk|ERR|PMD: ixgbe_dev_rx_queue_start(): Could not alloc mbuf for queue:0 |dpdk|ERR|PMD: ixgbe_dev_start(): Unable to start rxtx queues |dpdk|ERR|PMD: ixgbe_dev_start(): failure in ixgbe_dev_start(): -1 |netdev_dpdk|ERR|Interface dpdk0 start error: Input/output error&lt;/pre&gt; &lt;p&gt;For vhost ports, buffers are not reserved but you could see at runtime that you cannot get a new buffer while polling vhost ports. The log entry could look like this:&lt;/p&gt; &lt;pre&gt;|dpdk(pmd91)|ERR|VHOST_DATA: Failed to allocate memory for mbuf.&lt;/pre&gt; &lt;p&gt;If all the ports are needed, the easiest way to resolve this is to reduce the numbers of Rx queues or reserved buffers for the physical NICs. This can be done with the following command:&lt;/p&gt; &lt;pre&gt;# ovs-vsctl set Interface dpdk0 options:n_rxq=4&lt;/pre&gt; &lt;p&gt;or with this command:&lt;/p&gt; &lt;pre&gt;# ovs-vsctl set Interface dpdk0 options:n_rxq_desc=1024&lt;/pre&gt; &lt;p&gt;Alternatively, memory could be increased to ensure that a large pool of buffers will be available (that is, avoiding retries for lower amounts) but that approach scales only so far.&lt;/p&gt; &lt;h2 id="further-debug"&gt;Further Debugging&lt;/h2&gt; &lt;p&gt;If you run out of memory, there will be an error message in the log. If you want further details about the pools of memory being allocated, reused,  and freed, you can turn on debug mode:&lt;/p&gt; &lt;pre&gt;# ovs-appctl vlog/set netdev_dpdk:console:dbg # ovs-appctl vlog/set netdev_dpdk:syslog:dbg # ovs-appctl vlog/set netdev_dpdk:file:dbg&lt;/pre&gt; &lt;p&gt;Allocated, reused,  and freed messages will look like this:&lt;/p&gt; &lt;pre&gt;|netdev_dpdk|DBG|Allocated "ovs_mp_2030_0_262144" mempool with 262144 mbufs |netdev_dpdk|DBG|Reusing mempool "ovs_mp_2030_0_262144" |netdev_dpdk|DBG|Freeing mempool "ovs_mp_2030_0_262144"&lt;/pre&gt; &lt;p&gt;The name of the pool of buffers (that is, &lt;code&gt;mempool&lt;/code&gt;) gives us some information:&lt;/p&gt; &lt;pre&gt;2030 : Padded size of the buffer (derived from MTU) 0 : NUMA node the memory is allocated from 262144 : Number of buffers in the pool&lt;/pre&gt; &lt;p&gt;There is also a command to show which &lt;code&gt;mempool&lt;/code&gt; a port is using, as well as lots of other details (not shown):&lt;/p&gt; &lt;pre&gt;# ovs-appctl netdev-dpdk/get-mempool-info dpdk0 mempool &amp;#60;ovs_mp_2030_0_262144&amp;#62;@0x7f35ff77ce40 ...&lt;/pre&gt; &lt;h2 id="wrap-up"&gt;Wrap-up&lt;/h2&gt; &lt;p&gt;If you have read to here, it probably means you&amp;#8217;ve hit an issue with OvS-DPDK. Sorry to hear that. Hopefully, after reading the above guide you&amp;#8217;ll be able to identify if the issue was due to running out of memory and you&amp;#8217;ll know how to fix it.&lt;/p&gt; &lt;p&gt;Some guidance on how much memory is required and how to configure OvS-DPDK for multi-NUMA (including &lt;code&gt;dpdk-socket-mem&lt;/code&gt;) can be found in the &lt;a href="https://developers.redhat.com/blog/2018/03/16/ovs-dpdk-hugepage-memory/"&gt;OVS-DPDK: How much memory&lt;/a&gt; and &lt;a href="https://developers.redhat.com/blog/2017/06/28/ovs-dpdk-parameters-dealing-with-multi-numa/"&gt;OVS-DPDK: Multi-NUMA&lt;/a&gt; articles on this blog.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fdebugging-ovs-dpdk-memory-issues%2F&amp;#38;linkname=Debugging%20Memory%20Issues%20with%20Open%20vSwitch%20DPDK" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fdebugging-ovs-dpdk-memory-issues%2F&amp;#38;linkname=Debugging%20Memory%20Issues%20with%20Open%20vSwitch%20DPDK" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fdebugging-ovs-dpdk-memory-issues%2F&amp;#38;linkname=Debugging%20Memory%20Issues%20with%20Open%20vSwitch%20DPDK" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fdebugging-ovs-dpdk-memory-issues%2F&amp;#38;linkname=Debugging%20Memory%20Issues%20with%20Open%20vSwitch%20DPDK" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fdebugging-ovs-dpdk-memory-issues%2F&amp;#38;linkname=Debugging%20Memory%20Issues%20with%20Open%20vSwitch%20DPDK" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fdebugging-ovs-dpdk-memory-issues%2F&amp;#38;linkname=Debugging%20Memory%20Issues%20with%20Open%20vSwitch%20DPDK" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fdebugging-ovs-dpdk-memory-issues%2F&amp;#38;linkname=Debugging%20Memory%20Issues%20with%20Open%20vSwitch%20DPDK" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fdebugging-ovs-dpdk-memory-issues%2F&amp;#38;linkname=Debugging%20Memory%20Issues%20with%20Open%20vSwitch%20DPDK" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fdebugging-ovs-dpdk-memory-issues%2F&amp;#38;title=Debugging%20Memory%20Issues%20with%20Open%20vSwitch%20DPDK" data-a2a-url="https://developers.redhat.com/blog/2018/06/14/debugging-ovs-dpdk-memory-issues/" data-a2a-title="Debugging Memory Issues with Open vSwitch DPDK"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/06/14/debugging-ovs-dpdk-memory-issues/"&gt;Debugging Memory Issues with Open vSwitch DPDK&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ZoZS5zLebLI" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Introduction This article is about debugging out-of-memory issues with Open vSwitch with the Data Plane Development Kit (OvS-DPDK). It explains the situations in which you can run out of memory when using OvS-DPDK and it shows the log entries that are produced in those circumstances. It also shows some other log entries and commands for further [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/06/14/debugging-ovs-dpdk-memory-issues/"&gt;Debugging Memory Issues with Open vSwitch DPDK&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/06/14/debugging-ovs-dpdk-memory-issues/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">500667</post-id><dc:creator>Kevin Traynor</dc:creator><dc:date>2018-06-14T11:00:48Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/06/14/debugging-ovs-dpdk-memory-issues/</feedburner:origLink></entry><entry><title>Keycloak 4.0.0.Final Released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/rhgsic2mHfk/keycloak-400final-released.html" /><category term="feed_group_name_keycloak" scheme="searchisko:content:tags" /><category term="feed_name_keycloak" scheme="searchisko:content:tags" /><author><name>Stian Thorgersen</name></author><id>searchisko:content:id:jbossorg_blog-keycloak_4_0_0_final_released</id><updated>2018-06-14T07:38:19Z</updated><published>2018-06-14T07:38:00Z</published><content type="html">&lt;p&gt;To download the release go to the &lt;a href="http://www.keycloak.org/downloads"&gt;Keycloak homepage&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;For details on what is included in the release check out the &lt;a href="https://www.keycloak.org/docs/latest/release_notes/index.html"&gt;Release notes&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The full list of resolved issues is available in &lt;a href="https://issues.jboss.org/issues/?jql=project%20%3D%20keycloak%20and%20fixVersion%20%3D%204.0.0.Final"&gt;JIRA&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Before you upgrade remember to backup your database and check the &lt;a href="http://www.keycloak.org/docs/latest/upgrading/index.html"&gt;upgrade guide&lt;/a&gt; for anything that may have changed. &lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/rhgsic2mHfk" height="1" width="1" alt=""/&gt;</content><summary>To download the release go to the Keycloak homepage. For details on what is included in the release check out the Release notes The full list of resolved issues is available in JIRA. Before you upgrade remember to backup your database and check the upgrade guide for anything that may have changed.</summary><dc:creator>Stian Thorgersen</dc:creator><dc:date>2018-06-14T07:38:00Z</dc:date><feedburner:origLink>http://blog.keycloak.org/2018/06/keycloak-400final-released.html</feedburner:origLink></entry><entry><title>Scotland JBug - AppDev in the Cloud Workshop (slides)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/NsbtR10v84c/scotland-jbug-appdev-in-cloud-workshop-slides.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="BRMS" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="Cloud Suite" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="event" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="jbug" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="workshops" scheme="searchisko:content:tags" /><category term="xpaas" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-scotland_jbug_appdev_in_the_cloud_workshop_slides</id><updated>2018-06-14T05:00:12Z</updated><published>2018-06-14T05:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-Sw7Ifjmg8Hg/Wx50L7z_f_I/AAAAAAAAsw4/6TbNFO4LukEAavb_7GzcEUal5Q3m3_9QACLcBGAs/s1600/IMG_0202.JPG" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img alt="jbug scotland" border="0" data-original-height="1200" data-original-width="1600" height="240" src="https://3.bp.blogspot.com/-Sw7Ifjmg8Hg/Wx50L7z_f_I/AAAAAAAAsw4/6TbNFO4LukEAavb_7GzcEUal5Q3m3_9QACLcBGAs/s320/IMG_0202.JPG" title="" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;As &lt;a href="http://www.schabell.org/2018/05/scotland-jbug-appdev-in-the-cloud-workshop.html" target="_blank"&gt;I mentioned last time&lt;/a&gt; around, I was&amp;nbsp;&lt;a href="https://www.soprasteria.co.uk/en/newsroom/event/2018/06/06/default-calendar/sopra-steria-sponsors-jbug-scotland-appdev-in-the-cloud-workshop" target="_blank"&gt;heading back to my friends in Scotland&lt;/a&gt; to speak at the JBug Scotland.&lt;br /&gt;&lt;br /&gt;Last week it was game on in Edinburgh, where I spent the evening with a fun group of people that really seem to enjoy working with open source, containers and developing in the cloud.&lt;br /&gt;&lt;br /&gt;It was a full hands-on workshop showcasing application development in the cloud using containers, JBoss middleware, services, business logic and APIs.&lt;br /&gt;&lt;br /&gt;To change it up a bit I thought it might be fun to present not from my pre-configured, tested and working installation on my laptop, but to use an attendees laptop to kick off the first installation of our OpenShift Container Platform.&lt;br /&gt;&lt;br /&gt;Imagine the powerful storyline, when a presenter borrows your laptop for the first 30 minutes of the workshop and showcases kicking off installation so easy it works on ANY laptop?&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;It went really well with everyone engaged and staying well beyond the allotted time. We ended up wrapping up around 20:45.&lt;br /&gt;&lt;br /&gt;For completeness, here are the workshop slides, followed by the abstract from the workshop:&lt;br /&gt;&lt;br /&gt;&lt;div align="center"&gt;&lt;iframe allowfullscreen="" frameborder="0" height="380" marginheight="0" marginwidth="0" scrolling="no" src="https://appdevcloudworkshop.github.io" style="border-width: 1px; border: 1px solid #ccc; margin-bottom: 5px; max-width: 100%;" width="660"&gt;&lt;/iframe&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;&lt;a href="https://appdevcloudworkshop.github.io/#/" target="_blank"&gt;AppDev in the Cloud Workshop&lt;/a&gt;&lt;/h3&gt;&lt;i&gt;Ready to get hands-on with AppDev in the Cloud with container based services?&lt;/i&gt;&lt;br /&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt; &lt;i&gt;This workshop will let you experience the wonders of Red Hat's open technologies for cloud-based container application development, letting you integrate multiple services in to a polyglot cloud solution. In this workshop you're a developer working for Destinaisa, a travel agency that needs to set up its online bookings applications backend services. You'll be given the OpenShift Container Platform, then installing JBoss BRMS to work in the Destinasia discount rules.&lt;/i&gt;&lt;br /&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt;&lt;i&gt;&lt;/i&gt;&lt;br /&gt;&lt;i&gt;&lt;a href="https://2.bp.blogspot.com/-lyEmaJt9vsU/Wx50YcLlpUI/AAAAAAAAsxA/yrzNIcSNnWQajLfKMYzzdZUIxkJE739tgCLcBGAs/s1600/IMG_0203.JPG" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="jbug scotland" border="0" data-original-height="1200" data-original-width="1600" height="240" src="https://2.bp.blogspot.com/-lyEmaJt9vsU/Wx50YcLlpUI/AAAAAAAAsxA/yrzNIcSNnWQajLfKMYzzdZUIxkJE739tgCLcBGAs/s320/IMG_0203.JPG" title="" width="320" /&gt;&lt;/a&gt;&lt;i&gt;Once they are completed, you leverage Ansible playbooks to see infrastructure automation in action. Each playbook will deploy a new container based service to support flight, hotel, car and discount rule queries from your application. In total you will be running 6 container based applications or services in a private PaaS before testing this solution with a REST client, sending a booking and verifying the discounts provided by the rules you implemented.&lt;/i&gt;&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Again a great time with my friends in Scotland, looking forward to the next trip through Edinburgh!&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=c1HkKmGCTN8:t7PGXhCO5F0:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=c1HkKmGCTN8:t7PGXhCO5F0:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=c1HkKmGCTN8:t7PGXhCO5F0:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=c1HkKmGCTN8:t7PGXhCO5F0:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=c1HkKmGCTN8:t7PGXhCO5F0:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=c1HkKmGCTN8:t7PGXhCO5F0:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=c1HkKmGCTN8:t7PGXhCO5F0:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=c1HkKmGCTN8:t7PGXhCO5F0:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=c1HkKmGCTN8:t7PGXhCO5F0:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=c1HkKmGCTN8:t7PGXhCO5F0:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=c1HkKmGCTN8:t7PGXhCO5F0:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/c1HkKmGCTN8" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/NsbtR10v84c" height="1" width="1" alt=""/&gt;</content><summary>As I mentioned last time around, I was heading back to my friends in Scotland to speak at the JBug Scotland. Last week it was game on in Edinburgh, where I spent the evening with a fun group of people that really seem to enjoy working with open source, containers and developing in the cloud. It was a full hands-on workshop showcasing application development in the cloud using containers, JBoss mid...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2018-06-14T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/c1HkKmGCTN8/scotland-jbug-appdev-in-cloud-workshop-slides.html</feedburner:origLink></entry><entry><title>Arquillian Cube Extension 1.16.0 Released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/6xKIYkpYH2M/" /><category term="arquillian" scheme="searchisko:content:tags" /><category term="cube" scheme="searchisko:content:tags" /><category term="extension" scheme="searchisko:content:tags" /><category term="feed_group_name_arquillian" scheme="searchisko:content:tags" /><category term="feed_name_arquillian" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><author><name>Arquillian Project Team</name></author><id>searchisko:content:id:jbossorg_blog-arquillian_cube_extension_1_16_0_released</id><updated>2018-06-14T00:00:00Z</updated><published>2018-06-14T00:00:00Z</published><content type="html">&lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.16.0&lt;/em&gt; release of the &lt;em&gt;Arquillian Cube Extension&lt;/em&gt; component!&lt;/p&gt; &lt;h3&gt;What is Arquillian Cube Extension?&lt;/h3&gt; &lt;p&gt;With Arquillian Cube you can control the lifecycle of Docker images as part of the test lifecyle, either automatically or manually. This gives you the chance to scale up from a integration/functional test level all the way up to the system test level.&lt;/p&gt; &lt;h3&gt;Release details&lt;/h3&gt; &lt;table class="table table-bordered table-striped"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;th&gt;Component&lt;/th&gt; &lt;td&gt; &lt;a href="http://arquillian.org/modules/cube-extension/"&gt;Arquillian Cube Extension&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;Version&lt;/th&gt; &lt;td&gt; 1.16.0 &lt;span class="label tag"&gt; &lt;a href="https://github.com/arquillian/arquillian-cube/commit/89b2ec0c8d8018acf83d67a1fcc99d95457c0e4e.html"&gt;view tag&lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;Release date&lt;/th&gt; &lt;td&gt;2018-06-13&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;Released by&lt;/th&gt; &lt;td&gt;Dipak Pawar&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;Compiled against&lt;/th&gt; &lt;td&gt; &lt;ul class="unstyled"&gt; &lt;li&gt; &lt;a href="http://arquillian.org/modules/core-platform/"&gt;Arquillian Core&lt;/a&gt; – &lt;a href="http://arquillian.org/blog/2018/02/27/arquillian-core-1-4-0-Final/"&gt;1.4.0.Final&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href="http://arquillian.org/modules/spacelift-extension/"&gt;Arquillian Spacelift&lt;/a&gt; – &lt;a href="http://arquillian.org/blog/2017/06/02/arquillian-spacelift-1-0-2/"&gt;1.0.2&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href="http://arquillian.org/modules/shrinkwrap-shrinkwrap/"&gt;ShrinkWrap&lt;/a&gt; – &lt;a href="http://arquillian.org/blog/2016/06/18/shrinkwrap-1-2-6/"&gt;1.2.6&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href="http://arquillian.org/modules/resolver-shrinkwrap/"&gt;ShrinkWrap Resolver&lt;/a&gt; – &lt;a href="http://arquillian.org/blog/2017/12/07/resolver-3-0-1/"&gt;3.0.1&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h3&gt; Published artifacts &lt;small&gt;org.arquillian.cube&lt;/small&gt; &lt;/h3&gt; &lt;ul&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-api &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-api/1.16.0/arquillian-cube-api-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-api/1.16.0/arquillian-cube-api-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-api/1.16.0/arquillian-cube-api-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-spi &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-spi/1.16.0/arquillian-cube-spi-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-spi/1.16.0/arquillian-cube-spi-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-spi/1.16.0/arquillian-cube-spi-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-core &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-core/1.16.0/arquillian-cube-core-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-core/1.16.0/arquillian-cube-core-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-core/1.16.0/arquillian-cube-core-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-containerless &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-containerless/1.16.0/arquillian-cube-containerless-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-containerless/1.16.0/arquillian-cube-containerless-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-containerless/1.16.0/arquillian-cube-containerless-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » assertj-docker-java &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/assertj-docker-java/1.16.0/assertj-docker-java-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/assertj-docker-java/1.16.0/assertj-docker-java-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/assertj-docker-java/1.16.0/assertj-docker-java-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-docker &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-docker/1.16.0/arquillian-cube-docker-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-docker/1.16.0/arquillian-cube-docker-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-docker/1.16.0/arquillian-cube-docker-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-docker-drone &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-docker-drone/1.16.0/arquillian-cube-docker-drone-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-docker-drone/1.16.0/arquillian-cube-docker-drone-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-docker-drone/1.16.0/arquillian-cube-docker-drone-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-docker-reporter &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-docker-reporter/1.16.0/arquillian-cube-docker-reporter-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-docker-reporter/1.16.0/arquillian-cube-docker-reporter-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-docker-reporter/1.16.0/arquillian-cube-docker-reporter-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-docker-restassured &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-docker-restassured/1.16.0/arquillian-cube-docker-restassured-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-docker-restassured/1.16.0/arquillian-cube-docker-restassured-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-docker-restassured/1.16.0/arquillian-cube-docker-restassured-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-docker-junit-rule &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-docker-junit-rule/1.16.0/arquillian-cube-docker-junit-rule-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-docker-junit-rule/1.16.0/arquillian-cube-docker-junit-rule-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-docker-junit-rule/1.16.0/arquillian-cube-docker-junit-rule-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-docker-junit5 &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-docker-junit5/1.16.0/arquillian-cube-docker-junit5-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-docker-junit5/1.16.0/arquillian-cube-docker-junit5-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-docker-junit5/1.16.0/arquillian-cube-docker-junit5-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-docker-junit-rules &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-docker-junit-rules/1.16.0/arquillian-cube-docker-junit-rules-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-docker-junit-rules/1.16.0/arquillian-cube-docker-junit-rules-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-docker-junit-rules/1.16.0/arquillian-cube-docker-junit-rules-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-openshift-api &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-openshift-api/1.16.0/arquillian-cube-openshift-api-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-openshift-api/1.16.0/arquillian-cube-openshift-api-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-openshift-api/1.16.0/arquillian-cube-openshift-api-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-openshift-shrinkwrap &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-openshift-shrinkwrap/1.16.0/arquillian-cube-openshift-shrinkwrap-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-openshift-shrinkwrap/1.16.0/arquillian-cube-openshift-shrinkwrap-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-openshift-shrinkwrap/1.16.0/arquillian-cube-openshift-shrinkwrap-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-openshift &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-openshift/1.16.0/arquillian-cube-openshift-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-openshift/1.16.0/arquillian-cube-openshift-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-openshift/1.16.0/arquillian-cube-openshift-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-openshift-restassured &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-openshift-restassured/1.16.0/arquillian-cube-openshift-restassured-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-openshift-restassured/1.16.0/arquillian-cube-openshift-restassured-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-openshift-restassured/1.16.0/arquillian-cube-openshift-restassured-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-kubernetes-fabric8 &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-kubernetes-fabric8/1.16.0/arquillian-cube-kubernetes-fabric8-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-kubernetes-fabric8/1.16.0/arquillian-cube-kubernetes-fabric8-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-kubernetes-fabric8/1.16.0/arquillian-cube-kubernetes-fabric8-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-kubernetes &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-kubernetes/1.16.0/arquillian-cube-kubernetes-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-kubernetes/1.16.0/arquillian-cube-kubernetes-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-kubernetes/1.16.0/arquillian-cube-kubernetes-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-istio-kubernetes-api &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-istio-kubernetes-api/1.16.0/arquillian-cube-istio-kubernetes-api-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-istio-kubernetes-api/1.16.0/arquillian-cube-istio-kubernetes-api-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-istio-kubernetes-api/1.16.0/arquillian-cube-istio-kubernetes-api-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-istio-kubernetes &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-istio-kubernetes/1.16.0/arquillian-cube-istio-kubernetes-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-istio-kubernetes/1.16.0/arquillian-cube-istio-kubernetes-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-istio-kubernetes/1.16.0/arquillian-cube-istio-kubernetes-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-kubernetes-reporter &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-kubernetes-reporter/1.16.0/arquillian-cube-kubernetes-reporter-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-kubernetes-reporter/1.16.0/arquillian-cube-kubernetes-reporter-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-kubernetes-reporter/1.16.0/arquillian-cube-kubernetes-reporter-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-requirement &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-requirement/1.16.0/arquillian-cube-requirement-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-requirement/1.16.0/arquillian-cube-requirement-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-requirement/1.16.0/arquillian-cube-requirement-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-bom &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-bom/1.16.0/arquillian-cube-bom-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-requirement-spi &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-requirement-spi/1.16.0/arquillian-cube-requirement-spi-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-requirement-spi/1.16.0/arquillian-cube-requirement-spi-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-requirement-spi/1.16.0/arquillian-cube-requirement-spi-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-docker-starter &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-docker-starter/1.16.0/arquillian-cube-docker-starter-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-docker-starter/1.16.0/arquillian-cube-docker-starter-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-docker-starter/1.16.0/arquillian-cube-docker-starter-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-kubernetes-starter &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-kubernetes-starter/1.16.0/arquillian-cube-kubernetes-starter-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-kubernetes-starter/1.16.0/arquillian-cube-kubernetes-starter-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-kubernetes-starter/1.16.0/arquillian-cube-kubernetes-starter-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-openshift-starter &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-openshift-starter/1.16.0/arquillian-cube-openshift-starter-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-openshift-starter/1.16.0/arquillian-cube-openshift-starter-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-openshift-starter/1.16.0/arquillian-cube-openshift-starter-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3&gt; Release notes and resolved issues &lt;small&gt;6&lt;/small&gt; &lt;/h3&gt; &lt;p&gt;&lt;/p&gt; &lt;dl&gt; &lt;dt&gt;Other&lt;/dt&gt; &lt;dd&gt; &lt;ul class="unstyled"&gt; &lt;li&gt;&lt;a href="https://github.com/arquillian/arquillian-cube/issues/1052"&gt;#1052 OpenShiftAssistant : add a scale method with applicationName &lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/arquillian/arquillian-cube/issues/1051"&gt;#1051 KubernetesAssistant : improve detection of ready containers in pod&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/arquillian/arquillian-cube/issues/1048"&gt;#1048 java.io.IOException: Failed to upgrade connection when running test against OCP 3.9&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/arquillian/arquillian-cube/issues/1047"&gt;#1047 Make it possible to override namespace per class&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/arquillian/arquillian-cube/issues/1045"&gt;#1045 Cannot use plain text in @OpenShiftResource&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/arquillian/arquillian-cube/issues/1035"&gt;#1035 Update oc to use v3.9.0&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; Thanks to the following list of contributors: &lt;a href="http://arquillian.org/community/dipak-pawar"&gt;Dipak Pawar&lt;/a&gt;, &lt;a href="http://arquillian.org/community/goldmann"&gt;Marek Goldmann&lt;/a&gt;, &lt;a href="http://arquillian.org/community/kdaemonv"&gt;Kdaemonv&lt;/a&gt;, &lt;a href="http://arquillian.org/community/matousjobanek"&gt;Matous Jobanek&lt;/a&gt;, &lt;a href="http://arquillian.org/community/dcdh"&gt;Damien Clément D'huart&lt;/a&gt; &lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/6xKIYkpYH2M" height="1" width="1" alt=""/&gt;</content><summary>The Arquillian team is proud to announce the 1.16.0 release of the Arquillian Cube Extension component! What is Arquillian Cube Extension? With Arquillian Cube you can control the lifecycle of Docker images as part of the test lifecyle, either automatically or manually. This gives you the chance to scale up from a integration/functional test level all the way up to the system test level. Release d...</summary><dc:creator>Arquillian Project Team</dc:creator><dc:date>2018-06-14T00:00:00Z</dc:date><feedburner:origLink>http://arquillian.org/blog/2018/06/13/arquillian-cube-1-16-0/</feedburner:origLink></entry><entry><title>Remotely Debug an ASP.NET Core Container Pod on OpenShift with Visual Studio</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/nH-KmyRy32c/" /><category term=".NET Core" /><category term="Red Hat OpenShift Container Platform" /><category term=".NET" /><category term="ASP.NET" /><category term="ASP.NET Core" /><category term="debug" /><category term="debugging" /><category term="remote debug" /><category term="Visual Studio" /><author><name>Takayoshi Tanaka</name></author><id>https://developers.redhat.com/blog/?p=501037</id><updated>2018-06-13T11:00:18Z</updated><published>2018-06-13T11:00:18Z</published><content type="html">&lt;p&gt;Last year, I wrote &lt;a href="https://developers.redhat.com/blog/2017/10/23/remote-debug-asp-net-core-container-openshift-visual-studio-code/" target="_blank" rel="noopener"&gt;a blog post how to remotely debug your ASP.NET Core container on OpenShift with Visual Studio Code&lt;/a&gt;. Today I introduce how to remotely debug a pod using Visual Studio from your Windows computer. Sometimes you encounter an issue that happens only in the production environment. Remotely debugging a pod enables you to investigate such an issue.&lt;/p&gt; &lt;p&gt;Visual Studio and Visual Studio Code now support SSH as a transport protocol for remote debugging. If a remote host accepts an SSH connection, Visual Studio can do remote debugging using Visual Studio&amp;#8217;s default feature. However, you need to use the &lt;code&gt;oc&lt;/code&gt; command instead of an SSH client such as &lt;a href="https://putty.org/" target="_blank" rel="noopener"&gt;putty&lt;/a&gt; since Red Hat OpenShift pods don&amp;#8217;t allow direct connections via SSH. The &lt;a href="https://github.com/Microsoft/MIEngine" target="_blank" rel="noopener"&gt;MIEngine&lt;/a&gt; debugger enables you to use any command for SSH connection.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-large wp-image-501077 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug3-1024x340.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug3-1024x340.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug3-1024x340.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug3-300x100.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug3-768x255.png 768w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;p&gt;Note:&lt;br /&gt; All the steps below have been confirmed using a combination of Visual Studio 2017 (versions 15.7.2 and 15.8 preview2) on Windows 10 and OpenShift 3.9.&lt;/p&gt; &lt;p&gt;&lt;span id="more-501037"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Set Up Your ASP.NET Core Pod&lt;/h2&gt; &lt;p&gt;The procedure for setting up the ASP.NET Core pod is almost same as what I wrote before for Visual Studio Code. Here is a summary.&lt;/p&gt; &lt;h3&gt;Debug Build&lt;/h3&gt; &lt;p&gt;A debug build works fine for remotely debugging. If you use the .NET Core s2i image, the build is a release build by default. You can change to a debug build by specifying the &lt;code&gt;DOTNET_CONFIGURATION&lt;/code&gt; build environment variable, as shown below:&lt;/p&gt; &lt;pre&gt;$ oc set env bc DOTNET_CONFIGURATION=Debug &lt;/pre&gt; &lt;h3&gt;Disable Health Check&lt;/h3&gt; &lt;p&gt;Disabling health check is not mandatory but it is recommended because a pod could be restarted while the process is paused during remote debugging. You can remove &lt;a href="https://docs.openshift.com/container-platform/3.9/dev_guide/application_health.html#container-health-checks-using-probes" target="_blank" rel="noopener"&gt;the readiness check&lt;/a&gt; to prevent an unintended restart.&lt;/p&gt; &lt;h3&gt;Install the vsdbg Binary in the Pod&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;vsdbg&lt;/code&gt; binary is a product from &lt;a href="https://github.com/Microsoft/MIEngine" target="_blank" rel="noopener"&gt;MIEnginer by Microsoft&lt;/a&gt;. You can install &lt;code&gt;vsdbg&lt;/code&gt; in a pod as follows:&lt;/p&gt; &lt;pre&gt;$ oc rsh # curl -sSL https://aka.ms/getvsdbgsh | bash /dev/stdin -v vs2017u5 -l ~/vsdbg &lt;/pre&gt; &lt;h2&gt;Start a Remote Debugging Session&lt;/h2&gt; &lt;p&gt;The detailed steps are described in the &lt;a href="https://github.com/Microsoft/MIEngine/wiki/Offroad-Debugging-of-.NET-Core-on-Linux---OSX-from-Visual-Studio" target="_blank" rel="noopener"&gt;MIEngine wiki&lt;/a&gt;. I describe some of the points here.&lt;/p&gt; &lt;p&gt;First, you need to create a launch configuration file. This is similar to the &lt;code&gt;launch.json&lt;/code&gt; file for Visual Studio Code but not exactly the same. Here is an example. Please replace the path to the &lt;code&gt;oc.exe&lt;/code&gt; file and the name of the pod so they are appropriate for your environment.&lt;/p&gt; &lt;pre&gt;{ "version": "0.2.0", "adapter": "c:\\path\\to\\oc.exe", "adapterArgs": "exec -i -- /opt/app-root/vsdbg/vsdbg --interpreter=vscode", "languageMappings": { "C#": { "languageId": "3F5162F8-07C6-11D3-9053-00C04FA302A1", "extensions": [ "*" ] } }, "exceptionCategoryMappings": { "CLR": "449EC4CC-30D2-4032-9256-EE18EB41B62B", "MDA": "6ECE07A9-0EDE-45C4-8296-818D8FC401D4" }, "configurations": [ { "name": ".NET Core Attach", "type": "coreclr", "cwd": "/opt/app-root/app", "processId": "1", "request": "attach", "justMyCode": false, "sourceFileMap": { "/opt/app-root/src/": "${workspaceRoot}" } } ] } &lt;/pre&gt; &lt;p&gt;Then, open the project which has already synced with the running application in Visual Studio. Select &lt;strong&gt;View-&amp;#62;Other Windows-&amp;#62;Command Window&lt;/strong&gt; in Visual Studio. You can start the remote debugging session by executing the command &lt;code&gt;DebugAdapterHost.Launch /LaunchJson:""&lt;/code&gt; in Command Window.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-large wp-image-501047 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug1-1024x275.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug1-1024x275.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug1-1024x275.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug1-300x80.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug1-768x206.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug1.png 1257w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;p&gt;You can put in a breakpoint so the process will be paused at that point.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-large wp-image-501057 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug2-1024x622.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug2-1024x622.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug2-1024x622.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug2-300x182.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug2-768x466.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug2.png 1545w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;p&gt;Now you can see the actual values of variables in the source code. Your favorite Visual Studio debugging feature is available for ASP.NET Core on OpenShift. You can execute your code line by line with the step execution feature.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F13%2Fremotely-debug-asp-net-core-container-pod-on-openshift-with-visual-studio%2F&amp;#38;linkname=Remotely%20Debug%20an%20ASP.NET%20Core%20Container%20Pod%20on%20OpenShift%20with%20Visual%20Studio" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F13%2Fremotely-debug-asp-net-core-container-pod-on-openshift-with-visual-studio%2F&amp;#38;linkname=Remotely%20Debug%20an%20ASP.NET%20Core%20Container%20Pod%20on%20OpenShift%20with%20Visual%20Studio" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F13%2Fremotely-debug-asp-net-core-container-pod-on-openshift-with-visual-studio%2F&amp;#38;linkname=Remotely%20Debug%20an%20ASP.NET%20Core%20Container%20Pod%20on%20OpenShift%20with%20Visual%20Studio" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F13%2Fremotely-debug-asp-net-core-container-pod-on-openshift-with-visual-studio%2F&amp;#38;linkname=Remotely%20Debug%20an%20ASP.NET%20Core%20Container%20Pod%20on%20OpenShift%20with%20Visual%20Studio" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F13%2Fremotely-debug-asp-net-core-container-pod-on-openshift-with-visual-studio%2F&amp;#38;linkname=Remotely%20Debug%20an%20ASP.NET%20Core%20Container%20Pod%20on%20OpenShift%20with%20Visual%20Studio" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F13%2Fremotely-debug-asp-net-core-container-pod-on-openshift-with-visual-studio%2F&amp;#38;linkname=Remotely%20Debug%20an%20ASP.NET%20Core%20Container%20Pod%20on%20OpenShift%20with%20Visual%20Studio" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F13%2Fremotely-debug-asp-net-core-container-pod-on-openshift-with-visual-studio%2F&amp;#38;linkname=Remotely%20Debug%20an%20ASP.NET%20Core%20Container%20Pod%20on%20OpenShift%20with%20Visual%20Studio" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F13%2Fremotely-debug-asp-net-core-container-pod-on-openshift-with-visual-studio%2F&amp;#38;linkname=Remotely%20Debug%20an%20ASP.NET%20Core%20Container%20Pod%20on%20OpenShift%20with%20Visual%20Studio" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F13%2Fremotely-debug-asp-net-core-container-pod-on-openshift-with-visual-studio%2F&amp;#38;title=Remotely%20Debug%20an%20ASP.NET%20Core%20Container%20Pod%20on%20OpenShift%20with%20Visual%20Studio" data-a2a-url="https://developers.redhat.com/blog/2018/06/13/remotely-debug-asp-net-core-container-pod-on-openshift-with-visual-studio/" data-a2a-title="Remotely Debug an ASP.NET Core Container Pod on OpenShift with Visual Studio"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/06/13/remotely-debug-asp-net-core-container-pod-on-openshift-with-visual-studio/"&gt;Remotely Debug an ASP.NET Core Container Pod on OpenShift with Visual Studio&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/nH-KmyRy32c" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Last year, I wrote a blog post how to remotely debug your ASP.NET Core container on OpenShift with Visual Studio Code. Today I introduce how to remotely debug a pod using Visual Studio from your Windows computer. Sometimes you encounter an issue that happens only in the production environment. Remotely debugging a pod enables you [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/06/13/remotely-debug-asp-net-core-container-pod-on-openshift-with-visual-studio/"&gt;Remotely Debug an ASP.NET Core Container Pod on OpenShift with Visual Studio&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/06/13/remotely-debug-asp-net-core-container-pod-on-openshift-with-visual-studio/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">501037</post-id><dc:creator>Takayoshi Tanaka</dc:creator><dc:date>2018-06-13T11:00:18Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/06/13/remotely-debug-asp-net-core-container-pod-on-openshift-with-visual-studio/</feedburner:origLink></entry><entry><title>single zip distribution for jBPM</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/jbPA_uT31iw/single-zip-distribution-for-jbpm.html" /><category term="feed_group_name_jbossjbpmcommunity" scheme="searchisko:content:tags" /><category term="feed_name_swiderskimaciej" scheme="searchisko:content:tags" /><author><name>Maciej Swiderski</name></author><id>searchisko:content:id:jbossorg_blog-single_zip_distribution_for_jbpm</id><updated>2018-06-13T09:52:09Z</updated><published>2018-06-13T09:52:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;To simplify getting started experience for users I'd like to showcase a single zip distribution that includes:&lt;br /&gt;&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;WildFly server (at the moment version 11.0.0.Final)&lt;/li&gt;&lt;li&gt;workbench (aka jbpm console)&lt;/li&gt;&lt;li&gt;kie server with all capabilities enabled&lt;/li&gt;&lt;li&gt;jBPM case management show case application&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;All of them are perfectly configured and ready to run with just single and short command:&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;./stanalone.sh&lt;/span&gt;&lt;/div&gt;&lt;div&gt;or on windows&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;standalone.bat&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The only thing user needs to do is download, unzip and run!&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;But that's not all that comes with this single zip distribution - it comes with very handy scripts that allow to switch to different databases as easy as just one click.&lt;/div&gt;&lt;div&gt;There are three databases supported out of the box:&lt;/div&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;&lt;b&gt;H2&lt;/b&gt; - default with file based data base stored under &lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;WILDFLY_HOME/standalone/data&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;MySQL&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;PostgreSQL&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;MySQL and PostgreSQL must be installed before use. Moreover the scripts assume following values:&lt;/div&gt;&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;&lt;b&gt;host&lt;/b&gt; -&amp;gt; localhost&lt;/li&gt;&lt;li&gt;&lt;b&gt;port&lt;/b&gt; -&amp;gt; 3306 for MySQL and 5432 for PostgreSQL&lt;/li&gt;&lt;li&gt;&lt;b&gt;database name &lt;/b&gt;-&amp;gt; jbpm&lt;/li&gt;&lt;li&gt;&lt;b&gt;user name&lt;/b&gt; -&amp;gt; jbpm&lt;/li&gt;&lt;li&gt;&lt;b&gt;password &lt;/b&gt;-&amp;gt; jbpm&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;div&gt;in case the values are not correct, edit them in the script files&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;&lt;b&gt;jbpm-mysql-config.cli&lt;/b&gt; for MySQL&amp;nbsp;&lt;/li&gt;&lt;li&gt;&lt;b&gt;jbpm-postgres-config.cli&lt;/b&gt; for PostgreSQL&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;in both scripts values to be updated are on line 17 and these are located under &lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;WILDFLY_HOME/bin&lt;/span&gt;.&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;To switch to MySQL stop the server and use following command when server is stopped&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&amp;lt;WILDFLY_HOME&amp;gt;/bin/jboss-cli.sh --file=jbpm-mysql-config.cli&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;(Unix / Linux)&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&amp;lt;WILDFLY_HOME&amp;gt;\bin\jboss-cli.bat --file=jbpm-mysql-config.cli &lt;/span&gt;&amp;nbsp; &amp;nbsp; (Windows)&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;To switch to PostgreSQL stop the server and &amp;nbsp;use following command when server is stopped&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&amp;lt;WILDFLY_HOME&amp;gt;/bin/jboss-cli.sh --file=jbpm-postgres-config.cli&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;(Unix / Linux)&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&amp;lt;WILDFLY_HOME&amp;gt;\bin\jboss-cli.bat --file=jbpm-postgres-config.cli&lt;/span&gt; &amp;nbsp; &amp;nbsp; (Windows)&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;next, start the server again and all your data will be stored in external database.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;All this in action can be seen in this "not so short" screencast&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;iframe allow="autoplay; encrypted-media" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/gIqOBOOuYd0" width="560"&gt;&lt;/iframe&gt; &lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;As usual feedback welcome and please share your opinion if you'd like to see this in the official distribution of jBPM.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;For those that would like to give it a go directly &lt;a href="https://github.com/mswiderski/jbpm-server-distribution"&gt;here is the project&lt;/a&gt; - just clone it and build locally - in case you want to use another version of jBPM change property named &lt;b&gt;kie.version&lt;/b&gt; to the version number you want to use.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/jbPA_uT31iw" height="1" width="1" alt=""/&gt;</content><summary>To simplify getting started experience for users I'd like to showcase a single zip distribution that includes: WildFly server (at the moment version 11.0.0.Final) workbench (aka jbpm console) kie server with all capabilities enabled jBPM case management show case application All of them are perfectly configured and ready to run with just single and short command: ./stanalone.sh or on windows stand...</summary><dc:creator>Maciej Swiderski</dc:creator><dc:date>2018-06-13T09:52:00Z</dc:date><feedburner:origLink>http://mswiderski.blogspot.com/2018/06/single-zip-distribution-for-jbpm.html</feedburner:origLink></entry><entry><title>EDI Transformations with Fuse Ignite and Trace Transformer</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/oDju3ZVY8Fw/" /><category term="Developer Tools" /><category term="Integration" /><category term="JBoss Fuse" /><category term="camel" /><category term="EDI" /><category term="Fuse" /><category term="Fuse Ignite" /><category term="Fuse Integration Services" /><category term="iPaaS" /><category term="jboss fuse" /><category term="Red Hat OpenShift" /><author><name>Simon Green</name></author><id>https://developers.redhat.com/blog/?p=491807</id><updated>2018-06-12T11:00:30Z</updated><published>2018-06-12T11:00:30Z</published><content type="html">&lt;p&gt;As part of Red Hat JBoss Fuse 7, Red Hat introduces a new Integration Platform as a Service (iPaaS) called Fuse Ignite. Gartner uses the term c&lt;em&gt;itizen integrators &lt;/em&gt;to describe the iPaaS target market:&lt;em&gt; &lt;/em&gt;folks who aren&amp;#8217;t regularly concerned with integration. In my opinion, this market includes Electronic Data Interchange (EDI) analysts who focus on business rules and validations, rather than worrying about lines of code or Apache Camel routes. Therefore, Fuse Ignite introduces a mechanism to separate concerns, allowing EDI analysts to focus on their business mappings and transformations. On the other hand, developers can focus on low-level integration with systems and on writing code. Fuse Ignite offers a platform on which both citizen integrators and developers can coexist, collaborate, and contribute to an end-to-end integration.&lt;/p&gt; &lt;p&gt;&lt;span id="more-491807"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Trace Transformer&lt;/h2&gt; &lt;p&gt;Java has a bad record for transforming the complex textual formats and standards we find in EDI. Although Apache Camel helps somewhat with basic transformation, it will never be able to handle complex EDI standards by itself. Therefore, my recommendation is to use EDI tooling from our partner, Trace. Any EDI analyst can learn Trace&amp;#8217;s sophisticated drag-and-drop tool, Transformer, which offers support for any EDI standard imaginable.&lt;/p&gt; &lt;p&gt;&lt;img class=" size-large wp-image-492237 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-07-at-11.01.01-AM-1024x544.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-07-at-11.01.01-AM-1024x544.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-07-at-11.01.01-AM-1024x544.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-07-at-11.01.01-AM-300x159.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-07-at-11.01.01-AM-768x408.png 768w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;p&gt;In the past, Trace exported EDI mappings as an OSGi bundle, easily deployable to JBoss Fuse and interoperable with Camel. But with the advent of Spring Boot and Red Hat OpenShift, what is the best path forward? The answer is Fuse Ignite!&lt;/p&gt; &lt;h2&gt;Fuse Ignite&lt;/h2&gt; &lt;p&gt;Fuse Ignite is simply a c&lt;em&gt;itizen integrator–friendly &lt;/em&gt;interface for contributing to integration flows. Whether it&amp;#8217;s connecting to a complicated Salesforce API or publishing to a JMS queue or topic, Fuse Ignite allows citizen integrators to create their own integration flow. With Trace Transformer, they now have the ability to write, maintain, and operate their complex EDI transformations without worrying about writing a single Camel route. This mechanism, called a s&lt;em&gt;tep extension,&lt;/em&gt; gives developers the ability to add their own custom steps, which citizen integrators can include in their integrations. We now have a simple-to-use web interface for creating, monitoring, and operating integrations. And, of course, it&amp;#8217;s built on OpenShift to take care of how our integrations are deployed at scale.&lt;/p&gt; &lt;p&gt;&lt;img class=" size-large wp-image-492247 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-07-at-11.04.45-AM-1024x385.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-07-at-11.04.45-AM-1024x385.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-07-at-11.04.45-AM-1024x385.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-07-at-11.04.45-AM-300x113.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-07-at-11.04.45-AM-768x289.png 768w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;p&gt;I&amp;#8217;ve created a &lt;a href="https://github.com/sigreen/trace-transformer-syndesis-extension"&gt;sample project&lt;/a&gt; in GitHub that demonstrates the use of Trace Transformer with Fuse Ignite. Also, click below to watch my video demonstration of Fuse Ignite with the Trace Transformer step extension.&lt;/p&gt; &lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='390' src='https://www.youtube.com/embed/iC0ucIbbYf4?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F12%2Fedi-transformations-with-fuse-ignite-and-trace-transformer%2F&amp;#38;linkname=EDI%20Transformations%20with%20Fuse%20Ignite%20and%20Trace%20Transformer" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F12%2Fedi-transformations-with-fuse-ignite-and-trace-transformer%2F&amp;#38;linkname=EDI%20Transformations%20with%20Fuse%20Ignite%20and%20Trace%20Transformer" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F12%2Fedi-transformations-with-fuse-ignite-and-trace-transformer%2F&amp;#38;linkname=EDI%20Transformations%20with%20Fuse%20Ignite%20and%20Trace%20Transformer" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F12%2Fedi-transformations-with-fuse-ignite-and-trace-transformer%2F&amp;#38;linkname=EDI%20Transformations%20with%20Fuse%20Ignite%20and%20Trace%20Transformer" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F12%2Fedi-transformations-with-fuse-ignite-and-trace-transformer%2F&amp;#38;linkname=EDI%20Transformations%20with%20Fuse%20Ignite%20and%20Trace%20Transformer" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F12%2Fedi-transformations-with-fuse-ignite-and-trace-transformer%2F&amp;#38;linkname=EDI%20Transformations%20with%20Fuse%20Ignite%20and%20Trace%20Transformer" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F12%2Fedi-transformations-with-fuse-ignite-and-trace-transformer%2F&amp;#38;linkname=EDI%20Transformations%20with%20Fuse%20Ignite%20and%20Trace%20Transformer" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F12%2Fedi-transformations-with-fuse-ignite-and-trace-transformer%2F&amp;#38;linkname=EDI%20Transformations%20with%20Fuse%20Ignite%20and%20Trace%20Transformer" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F12%2Fedi-transformations-with-fuse-ignite-and-trace-transformer%2F&amp;#38;title=EDI%20Transformations%20with%20Fuse%20Ignite%20and%20Trace%20Transformer" data-a2a-url="https://developers.redhat.com/blog/2018/06/12/edi-transformations-with-fuse-ignite-and-trace-transformer/" data-a2a-title="EDI Transformations with Fuse Ignite and Trace Transformer"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/06/12/edi-transformations-with-fuse-ignite-and-trace-transformer/"&gt;EDI Transformations with Fuse Ignite and Trace Transformer&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/oDju3ZVY8Fw" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;As part of Red Hat JBoss Fuse 7, Red Hat introduces a new Integration Platform as a Service (iPaaS) called Fuse Ignite. Gartner uses the term citizen integrators to describe the iPaaS target market: folks who aren&amp;#8217;t regularly concerned with integration. In my opinion, this market includes Electronic Data Interchange (EDI) analysts who focus on business rules [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/06/12/edi-transformations-with-fuse-ignite-and-trace-transformer/"&gt;EDI Transformations with Fuse Ignite and Trace Transformer&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/06/12/edi-transformations-with-fuse-ignite-and-trace-transformer/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">491807</post-id><dc:creator>Simon Green</dc:creator><dc:date>2018-06-12T11:00:30Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/06/12/edi-transformations-with-fuse-ignite-and-trace-transformer/</feedburner:origLink></entry><entry><title>A brief introduction to the RESTEasy Tracing Feature</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/4E-_uMJ1-nk/a-brief-introduction-to-the-resteasy-tracing-feature" /><category term="feed_group_name_resteasy" scheme="searchisko:content:tags" /><category term="feed_name_resteasy" scheme="searchisko:content:tags" /><category term="tracing" scheme="searchisko:content:tags" /><author><name>Weinan Li</name></author><id>searchisko:content:id:jbossorg_blog-a_brief_introduction_to_the_resteasy_tracing_feature</id><updated>2018-06-12T12:47:19Z</updated><published>2018-06-12T03:53:00Z</published><content type="html">&lt;!-- [DocumentBodyStart:dd28bc70-5c2b-4948-b59e-0f9571e29526] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;p&gt;Tracing feature is a way for the users of the RESTEasy to understand what's going on internally in the container when a request is processed. It's different from the pure logging system or profiling feature, which provide more general information about the request/response info, etc.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;On the other hand, the tracing feature provides more internal states of the JAX-RS container. For example, it could be able to show what filters a request is going through, or how long time a request is processed, etc.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;Introduction to the design of tracing feature&lt;/strong&gt;&lt;/h2&gt;&lt;h2&gt;&lt;/h2&gt;&lt;p&gt;Currently it doesn't have a standard or spec to define the tracing feature, so the tracing feature is tightly coupled with the concrete JAX-RS implementation itself.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;The RESTEasy tracing feature supports three working modes:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;!--[CodeBlockStart:f5317f77-cf3b-4ad7-8117-fb367622d8fc][excluded]--&gt;&lt;pre class="plain" name="code"&gt;- OFF - ON_DEMAND - ALL&lt;/pre&gt;&lt;!--[CodeBlockEnd:f5317f77-cf3b-4ad7-8117-fb367622d8fc]--&gt;&lt;div style="display:none;"&gt;&lt;/div&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;ALL will enable the tracing feature. ON_DEMAND mode will give the control to client side: A client can send a tracing request via HTTP header and get the tracing info back from response headers. OFF mode will disable the tracing feature, and this is the default mode.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;On the other aspect, the tracing feature has different tracing logging levels. Here is the list of the levels:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;!--[CodeBlockStart:9be22fcd-1eca-45a3-a8e6-041656cc7d69][excluded]--&gt;&lt;pre class="plain" name="code"&gt;- SUMMARY - TRACE - VERBOSE&lt;/pre&gt;&lt;!--[CodeBlockEnd:9be22fcd-1eca-45a3-a8e6-041656cc7d69]--&gt;&lt;div style="display:none;"&gt;&lt;/div&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;The SUMMARY level will emit some brief tracing information. The TRACE level will produce more detailed tracing information, and the VERBOSE level will generate extremely detailed tracing information. Because there are no specs on these tracing levels yet, so the level of the tracing info is currently defined by RESTEasy internally.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;The tracing feature uses the JBoss Logging framework to output the trace log, so the jboss logger configuration controls the final output of the tracing info. If you enable the tracing feature but disable the jboss logger output, you still can't get the tracing info you want. In addition, the tracing logging levels are mapped to jboss logger log levels, which means the jboss logger controls is the actual place to control the tracing level threshold.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;Examples of using tracing feature&lt;/strong&gt;&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;By default, the tracing feature is turned off. If you want to enable the tracing feature, you can set the tracing mode and tracing level via the context-param parameters in your web project&amp;#8217;s web.xml file. Here is an example of the setting:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;!--[CodeBlockStart:1eb3767e-dfc1-415e-ad46-67a1936449d5][excluded]--&gt;&lt;pre class="plain" name="code"&gt; &amp;#160; resteasy.server.tracing.type &amp;#160; ALL &amp;#160; resteasy.server.tracing.threshold &amp;#160; SUMMARY &lt;/pre&gt;&lt;!--[CodeBlockEnd:1eb3767e-dfc1-415e-ad46-67a1936449d5]--&gt;&lt;div style="display:none;"&gt;&lt;/div&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;With above setting, we have enabled the server tracing, and put the tracing level to summary. If the underlying jboss logger&amp;#8217;s output threadshold is higher than the tracing level setting, then the users can start to get the tracing info from server side and from response headers.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Here is some sample text of the server side tracing log:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;!--[CodeBlockStart:16519f93-f359-4801-8766-0c3c9856147e][excluded]--&gt;&lt;pre class="plain" name="code"&gt;16:06:40,794 INFO&amp;#160; [general] PRE_MATCH_SUMMARY PreMatchRequest summary: 0 filters [ 0.03 ms] 16:06:40,797 DEBUG [general] REQUEST_FILTER Filter by [io.weli.tracing.HttpMethodOverride @50d53072] [ 0.09 ms] 16:06:40,797 DEBUG [general] REQUEST_FILTER Filter by [org.jboss.resteasy.core.AcceptHeaderByFileSuffixFilter @7e6bde58] [ 0.03 ms] 16:06:40,798 INFO&amp;#160; [general] REQUEST_FILTER_SUMMARY Request summary: 2 filters [ 1.24 ms] 16:06:40,804 DEBUG [general] REQUEST_FILTER Filter by [org.jboss.resteasy.plugins.providers.sse.SseEventSinkInterceptor @27930ef8 #2147483647] [ 0.50 ms] 16:06:40,804 INFO&amp;#160; [general] REQUEST_FILTER_SUMMARY Request summary: 1 filters [ 0.93 ms] 16:06:40,813 INFO&amp;#160; [general] METHOD_INVOKE Resource [SINGLETON|class io.weli.tracing.TracingConfigResource|io.weli.tracing.TracingConfigResource@7a1234bf] method=[public java.lang.String io.weli.tracing.TracingConfigResource.type(org.jboss.resteasy.spi.ResteasyDeployment)] [10.67 ms] 16:06:40,813 DEBUG [general] DISPATCH_RESPONSE Response: [org.jboss.resteasy.specimpl.BuiltResponse @28a0b6dc &amp;lt;200/SUCCESSFUL|OK|java.lang.String @52a345f7&amp;gt;] [ ---- ms] 16:06:40,814 INFO&amp;#160; [general] FINISHED Response status: 200 [ ---- ms] 16:06:40,827 DEBUG [general] RESPONSE_FILTER Filter by [org.jboss.resteasy.plugins.interceptors.MessageSanitizerContainerResponseFilter @35bb27cd #4000] [ 0.02 ms] 16:06:40,832 INFO&amp;#160; [general] RESPONSE_FILTER_SUMMARY Response summary: 2782639920301360 filters [2782639925.90 ms]&lt;/pre&gt;&lt;!--[CodeBlockEnd:16519f93-f359-4801-8766-0c3c9856147e]--&gt;&lt;div style="display:none;"&gt;&lt;/div&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;For client side, here is some sample text in response header:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;!--[CodeBlockStart:9238e9b1-4594-4cf1-9638-19909be5db56][excluded]--&gt;&lt;pre class="plain" name="code"&gt;16:06:40,938 FINE&amp;#160; [headers] http-outgoing-0 &amp;lt;&amp;lt; HTTP/1.1 200 OK 16:06:40,939 FINE&amp;#160; [headers] http-outgoing-0 &amp;lt;&amp;lt; X-RESTEasy-Tracing-008: FINISHED&amp;#160;&amp;#160;&amp;#160; [ ---- /&amp;#160; 3.16 ms |&amp;#160; ---- %] Response status: 200 16:06:40,939 FINE&amp;#160; [headers] http-outgoing-0 &amp;lt;&amp;lt; Date: Fri, 08 Jun 2018 08:06:40 GMT 16:06:40,939 FINE&amp;#160; [headers] http-outgoing-0 &amp;lt;&amp;lt; Connection: keep-alive 16:06:40,939 FINE&amp;#160; [headers] http-outgoing-0 &amp;lt;&amp;lt; X-RESTEasy-Tracing-000: PRE-MATCH&amp;#160;&amp;#160; [ 0.00 /&amp;#160; 0.00 ms |&amp;#160; 0.12 %] PreMatchRequest summary: 0 filters 16:06:40,939 FINE&amp;#160; [headers] http-outgoing-0 &amp;lt;&amp;lt; X-RESTEasy-Tracing-001: REQ-FILTER&amp;#160; [ 0.01 /&amp;#160; 0.33 ms |&amp;#160; 0.23 %] Filter by [io.weli.tracing.HttpMethodOverride @50d53072] 16:06:40,940 FINE&amp;#160; [headers] http-outgoing-0 &amp;lt;&amp;lt; X-RESTEasy-Tracing-002: REQ-FILTER&amp;#160; [ 0.01 /&amp;#160; 0.60 ms |&amp;#160; 0.18 %] Filter by [org.jboss.resteasy.core.AcceptHeaderByFileSuffixFilter @7e6bde58] 16:06:40,940 FINE&amp;#160; [headers] http-outgoing-0 &amp;lt;&amp;lt; X-RESTEasy-Tracing-003: REQ-FILTER&amp;#160; [ 0.54 /&amp;#160; 0.85 ms | 17.03 %] Request summary: 2 filters 16:06:40,940 FINE&amp;#160; [headers] http-outgoing-0 &amp;lt;&amp;lt; Content-Type: application/octet-stream 16:06:40,940 FINE&amp;#160; [headers] http-outgoing-0 &amp;lt;&amp;lt; Content-Length: 48 16:06:40,940 FINE&amp;#160; [headers] http-outgoing-0 &amp;lt;&amp;lt; X-RESTEasy-Tracing-004: REQ-FILTER&amp;#160; [ 0.01 /&amp;#160; 1.47 ms |&amp;#160; 0.28 %] Filter by [org.jboss.resteasy.plugins.providers.sse.SseEventSinkInterceptor @27930ef8 #2147483647] 16:06:40,940 FINE&amp;#160; [headers] http-outgoing-0 &amp;lt;&amp;lt; X-RESTEasy-Tracing-005: REQ-FILTER&amp;#160; [ 0.26 /&amp;#160; 1.71 ms |&amp;#160; 8.34 %] Request summary: 1 filters 16:06:40,940 FINE&amp;#160; [headers] http-outgoing-0 &amp;lt;&amp;lt; X-RESTEasy-Tracing-006: INVOKE&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; [ 0.76 /&amp;#160; 2.23 ms | 24.08 %] Resource [SINGLETON|class io.weli.tracing.TracingConfigResource|io.weli.tracing.TracingConfigResource@7a1234bf] method=[public java.lang.String io.weli.tracing.TracingConfigResource.logger(org.jboss.resteasy.spi.HttpRequest) throws java.lang.NoSuchMethodException] 16:06:40,941 FINE&amp;#160; [headers] http-outgoing-0 &amp;lt;&amp;lt; X-RESTEasy-Tracing-007: INVOKE&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; [ ---- /&amp;#160; 2.96 ms |&amp;#160; ---- %] Response: [org.jboss.resteasy.specimpl.BuiltResponse @7534fda1 &amp;lt;200/SUCCESSFUL|OK|java.lang.String @7bf31d77&amp;gt;]&lt;/pre&gt;&lt;!--[CodeBlockEnd:9238e9b1-4594-4cf1-9638-19909be5db56]--&gt;&lt;div style="display:none;"&gt;&lt;/div&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Above is some sample tracing text. Currently the tracing feature is still under development, and more tracing info entries will be provided to the users. And the formal document will be provided as the development is going on.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;If you&amp;#8217;d like to have a look at the tracing feature in action, you can current see the simple test case in RESTEasy master branch:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="https://github.com/resteasy/Resteasy/blob/master/testsuite/integration-tests/src/test/java/org/jboss/resteasy/test/tracing/BasicTracingTest.java" rel="nofollow"&gt;https://github.com/resteasy/Resteasy/blob/master/testsuite/integration-tests/src/test/java/org/jboss/resteasy/test/tracing/BasicTracingTest.java&lt;/a&gt;&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;In above is the brief description of the RESTEasy document.&lt;/p&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:dd28bc70-5c2b-4948-b59e-0f9571e29526] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/4E-_uMJ1-nk" height="1" width="1" alt=""/&gt;</content><summary>Tracing feature is a way for the users of the RESTEasy to understand what's going on internally in the container when a request is processed. It's different from the pure logging system or profiling feature, which provide more general information about the request/response info, etc.     On the other hand, the tracing feature provides more internal states of the JAX-RS container. For example, it c...</summary><dc:creator>Weinan Li</dc:creator><dc:date>2018-06-12T03:53:00Z</dc:date><feedburner:origLink>https://developer.jboss.org/community/resteasy/blog/2018/06/11/a-brief-introduction-to-the-resteasy-tracing-feature</feedburner:origLink></entry><entry><title>Building Container-Native Node.js Applications with Red Hat OpenShift Application Runtimes and Istio</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/uCO0_-dEqM0/" /><category term="Node.js" /><category term="Red Hat OpenShift Application Runtimes" /><category term="Service Mesh" /><category term="cloud native" /><category term="cloud-native apps" /><category term="containers" /><category term="istio" /><category term="microservices" /><category term="Red Hat OpenShift" /><category term="RHOAR" /><category term="service mesh" /><author><name>Philip Hayes</name></author><id>https://developers.redhat.com/blog/?p=500057</id><updated>2018-06-11T11:00:57Z</updated><published>2018-06-11T11:00:57Z</published><content type="html">&lt;p&gt;For developers working on a Kubernetes-based application environment such as Red Hat OpenShift, there are a number things that need to be considered to fully take advantage of the significant benefits provided by these technologies, including:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;How do I communicate with the orchestration layer to indicate the application is operating correctly and is available to receive traffic?&lt;/li&gt; &lt;li&gt;What happens if the application detects a system fault, and how does the application relay this to the orchestration layer?&lt;/li&gt; &lt;li&gt;How can I accurately trace traffic flow between my applications in order to identify potential bottlenecks?&lt;/li&gt; &lt;li&gt;What tools can I use to easily deploy my updated application as part of my standard toolchain?&lt;/li&gt; &lt;li&gt;What happens if I introduce a network fault between my services, and how do I test this scenario?&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;These questions are central to building container-native solutions. At Red Hat, we define &lt;em&gt;container-native&lt;/em&gt; as applications that conform to the following key tenets:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;DevOps automation&lt;/li&gt; &lt;li&gt;Single concern principle&lt;/li&gt; &lt;li&gt;Service discovery&lt;/li&gt; &lt;li&gt;High observability&lt;/li&gt; &lt;li&gt;Lifecycle conformance&lt;/li&gt; &lt;li&gt;Runtime confinement&lt;/li&gt; &lt;li&gt;Process disposability&lt;/li&gt; &lt;li&gt;Image immutability&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;This may seem like a lot of overhead on top of the core application logic. &lt;a href="https://developers.redhat.com/products/rhoar/overview/"&gt;Red Hat OpenShift Application Runtimes (RHOAR)&lt;/a&gt; and &lt;a href="https://developers.redhat.com/topics/service-mesh/"&gt;Istio&lt;/a&gt; provide developers with tools to adhere to these principles with minimal overhead in terms of coding and implementation.&lt;/p&gt; &lt;p&gt;In this blog post, we&amp;#8217;re specifically focusing on how RHOAR and Istio combine to provide tools for DevOps automation, lifecycle conformance, high observability, and runtime confinement.&lt;/p&gt; &lt;p&gt;&lt;span id="more-500057"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note: This article is based on version 0.7 of Istio, which was the latest version at the time of writing. We do not recommend using this version of Istio for production deployments due to some key features still in the alpha/beta state. While Istio is evolving quickly, we think it is important for developers to learn and understand the capabilities to fully take advantage of this technology once it becomes a viable production offering.&lt;/strong&gt;&lt;/p&gt; &lt;h2&gt;Prerequisites&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;Red Hat Openshift Container Platform 3.9 (RHOCP) or Minishift Istio build: &lt;a href="https://github.com/openshift-istio/origin/releases"&gt;https://github.com/openshift-istio/origin/releases&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;oc&lt;/code&gt; command-line access to RHOCP with cluster administrator rights&lt;/li&gt; &lt;li&gt;Node.js version 8.6.0&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;Note: Due to the requirement for administrator rights during the installation phase, Istio is not available on Red Hat OpenShift Online.&lt;/strong&gt;&lt;/p&gt; &lt;h2&gt;&lt;strong&gt;Setting Up a RHOAR Project&lt;/strong&gt;&lt;/h2&gt; &lt;p&gt;We&amp;#8217;re going to start off with the RHOAR health check booster repo:&lt;br /&gt; &lt;a href="https://github.com/bucharest-gold/nodejs-health-check-redhat"&gt;https://github.com/bucharest-gold/nodejs-health-check-redhat&lt;/a&gt;.&lt;br /&gt; Clone this repo with the following command:&lt;/p&gt; &lt;pre&gt;$ git clone https://github.com/bucharest-gold/nodejs-health-check-redhat&lt;/pre&gt; &lt;p&gt;Change to the &lt;code&gt;nodejs-health-check-redhat&lt;/code&gt; folder:&lt;/p&gt; &lt;pre&gt;$ cd nodejs-health-check-redhat&lt;/pre&gt; &lt;p&gt;Install &lt;code&gt;npm&lt;/code&gt; dependencies:&lt;/p&gt; &lt;pre&gt;$ npm install&lt;/pre&gt; &lt;p&gt;Create a new project in OpenShift called &lt;code&gt;rhoar-istio&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;$ oc new-project rhoar-istio&lt;/pre&gt; &lt;p&gt;Deploy the RHOAR booster application:&lt;/p&gt; &lt;pre&gt;$ npm run openshift&lt;/pre&gt; &lt;p&gt;Once the deployment is complete, you should see output like this:&lt;/p&gt; &lt;pre&gt; 2018-06-01T14:06:35.037Z INFO build nodejs-health-check-redhat-s2i-1 complete 2018-06-01T14:06:37.923Z INFO creating deployment configuration nodejs-health-check-redhat 2018-06-01T14:06:37.927Z INFO creating new route nodejs-health-check-redhat 2018-06-01T14:06:37.963Z INFO creating new service nodejs-health-check-redhat 2018-06-01T14:06:38.063Z INFO route host mapping nodejs-health-check-redhat-rhoar.router.default.svc.cluster.local 2018-06-01T14:06:38.106Z INFO complete&lt;/pre&gt; &lt;p&gt;In OpenShift, the application should be deployed and pods should be running, as shown below.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-500177 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-01-at-3.30.36-PM-1024x442.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-01-at-3.30.36-PM-1024x442.png" alt="" width="640" height="276" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-01-at-3.30.36-PM-1024x442.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-01-at-3.30.36-PM-300x129.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-01-at-3.30.36-PM-768x331.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/p&gt; &lt;p&gt;The key thing to note here is the route host mapping URL, which in this case is &lt;code&gt;http://nodejs-health-checker-rhoar-istio.router.default.svc.cluster.local&lt;/code&gt;. Once your DNS is configured correctly, you should be able to navigate to this URL and see the following page:&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-500127 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-01-at-10.36.36-AM-1024x357.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-01-at-10.36.36-AM-1024x357.png" alt="" width="640" height="223" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-01-at-10.36.36-AM-1024x357.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-01-at-10.36.36-AM-300x104.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-01-at-10.36.36-AM-768x267.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/p&gt; &lt;p&gt;We&amp;#8217;re going to use this UI shortly to trigger the container to restart.&lt;/p&gt; &lt;p&gt;Let&amp;#8217;s take a look at the code to see what this booster app is demonstrating.&lt;br /&gt; Looking at &lt;code&gt;app.js&lt;/code&gt;, we can see the following, which means that the app is creating an instance of the Express web framework:&lt;/p&gt; &lt;pre&gt;const app = express();&lt;/pre&gt; &lt;p&gt;The following line means the app is setting the variable &lt;code&gt;isOnline&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; on startup:&lt;/p&gt; &lt;pre&gt;let isOnline = true;&lt;/pre&gt; &lt;p&gt;And the app is defining a custom liveness probe that returns &amp;#8220;OK&amp;#8221; if &lt;code&gt;isOnline&lt;/code&gt; is set to true:&lt;/p&gt; &lt;pre&gt;const options = { livenessCallback: (request, response) =&amp;#62; { return isOnline ? response.send('OK') : response.sendStatus(500); } }; &lt;/pre&gt; &lt;p&gt;The app is defining a route, &lt;code&gt;/api/stop&lt;/code&gt;, that allows users to set the value of &lt;code&gt;isOnline&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;app.use('/api/stop', (request, response) =&amp;#62; { isOnline = false; return response.send('Stopping HTTP server'); });&lt;/pre&gt; &lt;p&gt;The app is using the &lt;code&gt;kube-probe&lt;/code&gt; npm module to provide readiness and liveness probes:&lt;/p&gt; &lt;pre&gt;const probe = require('kube-probe');&lt;/pre&gt; &lt;p&gt;The probe module is invoked with the app object (instance of Express):&lt;/p&gt; &lt;pre&gt;probe(app, options);&lt;/pre&gt; &lt;p&gt;When you look at the pods in the OpenShift console, you should see something like:&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-500097 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-01-at-10.42.51-AM-1024x216.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-01-at-10.42.51-AM-1024x216.png" alt="" width="640" height="135" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-01-at-10.42.51-AM-1024x216.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-01-at-10.42.51-AM-300x63.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-01-at-10.42.51-AM-768x162.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/p&gt; &lt;p&gt;This is showing the readiness probe is correctly informing OpenShift that the container is ready.&lt;/p&gt; &lt;p&gt;From the UI exposed by the route, when you click on the &lt;strong&gt;Stop Service&lt;/strong&gt; button, you should see in OpenShift an indication that OpenShift has detected that the liveness probe has failed and is attempting to restart the container.&lt;/p&gt; &lt;p&gt;So this is pretty cool &amp;#8220;out of the box&amp;#8221; functionality provided by RHOAR, touching on three of the key principles of container-native design: DevOps automation, lifecycle conformance, and high observability.&lt;/p&gt; &lt;h2&gt;Why Use Istio?&lt;/h2&gt; &lt;p&gt;The following is taken from the Istio website:&lt;/p&gt; &lt;blockquote&gt;&lt;p&gt;Istio provides a complete solution to satisfy the diverse requirements of microservice applications by providing behavioral insights and operational control over the service mesh as a whole. It provides a number of key capabilities uniformly across a network of services:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Traffic Management.&lt;/strong&gt; Control the flow of traffic and API calls between services, make calls more reliable, and make the network more robust in the face of adverse conditions.&lt;br /&gt; &lt;strong&gt;Service Identity and Security.&lt;/strong&gt; Provide services in the mesh with a verifiable identity and provide the ability to protect service traffic as it flows over networks of varying degrees of trustability.&lt;br /&gt; &lt;strong&gt;Policy Enforcement.&lt;/strong&gt; Apply organizational policy to the interaction between services, ensure access policies are enforced and resources are fairly distributed among consumers. Policy changes are made by configuring the mesh, not by changing application code.&lt;br /&gt; &lt;strong&gt;Telemetry.&lt;/strong&gt; Gain understanding of the dependencies between services and the nature and flow of traffic between them, providing the ability to quickly identify issues.&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;In short, introducing Istio to our project will provide a lot of tools around traffic management, monitoring, and fault tolerance providing (among other things) a lot of benefits for the high observability principle.&lt;/p&gt; &lt;p&gt;For example, with minimal implementation impact on the part of the developer, Istio will produce tracing information such as this:&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-500207 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-05-30-at-2.51.14-PM-1024x381.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-05-30-at-2.51.14-PM-1024x381.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-05-30-at-2.51.14-PM-1024x381.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-05-30-at-2.51.14-PM-300x112.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-05-30-at-2.51.14-PM-768x286.png 768w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;p&gt;The screenshot above shows the trace of a request hitting three microservices in a service mesh. The screenshot below shows the same mesh in a directed acyclic graph that was also generated by the information recorded by Istio.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-500217 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-05-30-at-2.50.29-PM-1024x517.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-05-30-at-2.50.29-PM-1024x517.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-05-30-at-2.50.29-PM-1024x517.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-05-30-at-2.50.29-PM-300x151.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-05-30-at-2.50.29-PM-768x388.png 768w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h2&gt;Installing Istio&lt;/h2&gt; &lt;p&gt;To start off, we&amp;#8217;ll install Istio using instructions here: &lt;a href="https://github.com/openshift-istio/openshift-ansible/blob/istio-3.9-0.7.1/istio/Installation.md"&gt;https://github.com/openshift-istio/openshift-ansible/blob/istio-3.9-0.7.1/istio/Installation.md&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;On the master node:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Change to the directory containing the master configuration file (&lt;code&gt;master-config.yaml&lt;/code&gt;), for example, &lt;code&gt;/etc/origin/master&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Create a file named &lt;code&gt;master-config.patch&lt;/code&gt; with the following contents:&lt;/p&gt; &lt;pre&gt;admissionConfig:  pluginConfig:   MutatingAdmissionWebhook:    configuration:     apiVersion: v1     disable: false     kind: DefaultAdmissionConfig kubernetesMasterConfig:  controllerArguments:   cluster-signing-cert-file:   - ca.crt   cluster-signing-key-file:   - ca.key&lt;/pre&gt; &lt;p&gt;Run the following commands to patch the &lt;code&gt;master-config.yml&lt;/code&gt; file and restart the atomic OpenShift master services:&lt;/p&gt; &lt;pre&gt;cp -p master-config.yaml master-config.yaml.prepatch oc ex config patch master-config.yaml.prepatch -p "$(cat ./master-config.patch)" &amp;#62; master-config.yaml systemctl restart atomic-openshift-master*&lt;/pre&gt; &lt;p&gt;In order to run the Elasticsearch application, it is necessary to make a change to the kernel configuration on each node; this change will be handled through the &lt;code&gt;sysctl&lt;/code&gt; service.&lt;/p&gt; &lt;p&gt;Create a file named &lt;code&gt;/etc/sysctl.d/99-elasticsearch.conf&lt;/code&gt; with the following contents:&lt;/p&gt; &lt;pre&gt;vm.max_map_count = 262144&lt;/pre&gt; &lt;p&gt;Execute the following command:&lt;/p&gt; &lt;pre&gt;sysctl vm.max_map_count=262144&lt;/pre&gt; &lt;p&gt;On a machine with an &lt;code&gt;oc&lt;/code&gt; user logged in with cluster-admin rights, clone the &lt;code&gt;openshift-istio&lt;/code&gt; repo locally:&lt;/p&gt; &lt;pre&gt;$ git clone https://github.com/openshift-istio/openshift-ansible.git $ cd openshift-ansible/istio&lt;/pre&gt; &lt;p&gt;Run the Istio installer template:&lt;/p&gt; &lt;pre&gt;$ oc new-app istio_installer_template.yaml --param=OPENSHIFT_ISTIO_MASTER_PUBLIC_URL=&amp;#60;master public url&amp;#62;&lt;/pre&gt; &lt;p&gt;Verify the installation:&lt;/p&gt; &lt;pre&gt;$ oc get pods -n istio-system -w&lt;/pre&gt; &lt;p&gt;You should see a list similar to this:&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-500237 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-08-at-9.49.40-AM-1024x480.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-08-at-9.49.40-AM-1024x480.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-08-at-9.49.40-AM-1024x480.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-08-at-9.49.40-AM-300x141.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-08-at-9.49.40-AM-768x360.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-08-at-9.49.40-AM.png 1106w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;p&gt;Once all the pods are successfully running, there are a number of new routes created, for example, those shown in the following screenshot:&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-500257 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-06-at-9.20.05-AM-1024x356.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-06-at-9.20.05-AM-1024x356.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-06-at-9.20.05-AM-1024x356.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-06-at-9.20.05-AM-300x104.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-06-at-9.20.05-AM-768x267.png 768w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;p&gt;Take some time to look at the interfaces exposed by these routes; there won&amp;#8217;t be any data at this stage though until we start using our app with an Istio proxy sidecar.&lt;/p&gt; &lt;p&gt;Now that Istio is installed and running, we need to configure our Node.js application deployment to include the Istio proxy sidecar. Istio is configured to add the proxy sidecar to any deployments that include the annotation &lt;code&gt;sidecar.istio.io/inject: "true"&lt;/code&gt;.&lt;/p&gt; &lt;h2&gt;Change the Port the Liveness/Readiness Probes Are Listening On&lt;/h2&gt; &lt;p&gt;The Istio sidecar proxy will not operate correctly if the liveness/readiness probes are on the same port as the app routes. To resolve this issue we&amp;#8217;re going to change the port for the probes in our Node.js app to 3000.&lt;/p&gt; &lt;p&gt;To do this, we add an additional Express web framework instance listening on port 3000 by adding the following to &lt;code&gt;app.js&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;const health = express(); … probe(health, options); health.listen(3000, function(){ console.log('App ready, probes listening on port 3000'); })&lt;/pre&gt; &lt;p&gt;The full &lt;code&gt;app.js&lt;/code&gt; file will now look like this:&lt;/p&gt; &lt;pre&gt;const path = require('path'); const express = require('express'); const bodyParser = require('body-parser'); const probe = require('kube-probe'); const app = express(); const health = express(); app.use(bodyParser.json()); app.use(bodyParser.urlencoded({extended: false})); app.use(express.static(path.join(__dirname, 'public'))); // Expose the license.html at http[s]://[host]:[port]/licences/licenses.html app.use('/licenses', express.static(path.join(__dirname, 'licenses'))); let isOnline = true; // app.use('/api/greeting', (request, response) =&amp;#38;gt; { if (!isOnline) { response.status(503); return response.send('Not online'); } const name = request.query ? request.query.name : undefined; return response.send({content: `Hello, ${name || 'World!'}`}); }); app.use('/api/stop', (request, response) =&amp;#38;gt; { isOnline = false; return response.send('Stopping HTTP server'); }); const options = { livenessCallback: (request, response) =&amp;#38;gt; { return isOnline ? response.send('OK') : response.sendStatus(500); } }; probe(health, options); health.listen(3000, function(){ console.log('App ready, probes listening on port 3000'); }) module.exports = app; &lt;/pre&gt; &lt;h2&gt;Update the deployment.yml File&lt;/h2&gt; &lt;p&gt;We need to make the following changes to the &lt;code&gt;.nodeshift/deployment.yml&lt;/code&gt; file. Additions are highlighted in &lt;span style="color: #008000;"&gt;green&lt;/span&gt;.&lt;br /&gt; Changes are highlighted in &lt;span style="color: #ff0000;"&gt;red&lt;/span&gt;:&lt;/p&gt; &lt;pre&gt;spec:  template:   &lt;span style="color: #339966;"&gt;metadata:&lt;/span&gt;    &lt;span style="color: #339966;"&gt;labels:&lt;/span&gt;     &lt;span style="color: #339966;"&gt;app: nodejs-health-check-redhat&lt;/span&gt;     &lt;span style="color: #339966;"&gt;name: nodejs-health-check-redhat&lt;/span&gt;    &lt;span style="color: #339966;"&gt;annotations:&lt;/span&gt;     &lt;span style="color: #339966;"&gt;sidecar.istio.io/inject: "true"&lt;/span&gt;  spec:   containers:   &lt;span style="color: #339966;"&gt;- name: nodejs-health-check-redhat&lt;/span&gt;    &lt;span style="color: #339966;"&gt;ports:&lt;/span&gt;    &lt;span style="color: #339966;"&gt;- containerPort: 8080&lt;/span&gt;     &lt;span style="color: #339966;"&gt;protocol: TCP&lt;/span&gt;     &lt;span style="color: #339966;"&gt;name: http&lt;/span&gt;    readinessProbe:     httpGet:      path: /api/health/readiness      port: &lt;span style="color: #ff0000;"&gt;3000&lt;/span&gt;      scheme: HTTP     failureThreshold: 3     initialDelaySeconds: 10     periodSeconds: 5     successThreshold: 1     timeoutSeconds: 1    livenessProbe:     httpGet:      path: /api/health/liveness      port: &lt;span style="color: #ff0000;"&gt;3000&lt;/span&gt;      scheme: HTTP     failureThreshold: 2     initialDelaySeconds: 60     periodSeconds: 3     successThreshold: 1     timeoutSeconds: 1    &lt;span style="color: #339966;"&gt;resources:&lt;/span&gt;     &lt;span style="color: #339966;"&gt;limits:&lt;/span&gt;     &lt;span style="color: #339966;"&gt;cpu: 200m&lt;/span&gt;     &lt;span style="color: #339966;"&gt;memory: 400Mi&lt;/span&gt;    &lt;span style="color: #339966;"&gt;requests:&lt;/span&gt;     &lt;span style="color: #339966;"&gt;cpu: 100m&lt;/span&gt;     &lt;span style="color: #339966;"&gt;memory: 200Mi&lt;/span&gt; &lt;/pre&gt; &lt;p&gt;Let&amp;#8217;s look at these changes individually.&lt;/p&gt; &lt;p&gt;For Istio metrics to correctly identify the application, the template must have an &amp;#8220;app&amp;#8221; label in &lt;code&gt;metadata&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;metadata: labels:  app: nodejs-health-check-redhat  name: nodejs-health-check-redhat&lt;/pre&gt; &lt;p&gt;The Istio sidecar injector is configured to add the sidecar proxy to any deployments including the &lt;code&gt;sidecar.istio.io/inject: "true"&lt;/code&gt; annotation. So we&amp;#8217;re adding this under &lt;code&gt;metadata&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;annotations: &amp;#38;nbspsidecar.istio.io/inject: "true"&lt;/pre&gt; &lt;p&gt;For the data to be logged as HTTP, the container must have a port definition named as &lt;code&gt;http&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;- name: nodejs-health-check-redhat  ports:  - containerPort: 8080   protocol: TCP   name: http&lt;/pre&gt; &lt;p&gt;As stated previously, we are changing the probe ports from 8080 to 3000:&lt;/p&gt; &lt;pre&gt;readinessProbe:  httpGet:   path: /api/health/readiness   port: &lt;span style="color: #ff0000;"&gt;3000&lt;/span&gt;   scheme: HTTP  failureThreshold: 3  initialDelaySeconds: 10  periodSeconds: 5  successThreshold: 1  timeoutSeconds: 1 livenessProbe:  httpGet:   path: /api/health/liveness   port: &lt;span style="color: #ff0000;"&gt;3000&lt;/span&gt;   scheme: HTTP  failureThreshold: 2  initialDelaySeconds: 60  periodSeconds: 3  successThreshold: 1  timeoutSeconds: 1&lt;/pre&gt; &lt;p&gt;And finally, we are also adding some resource constraints to communicate to OpenShift the required CPU and memory this container will consume:&lt;/p&gt; &lt;pre&gt;resources:  limits:   cpu: 200m   memory: 400Mi  requests:   cpu: 100m   memory: 200Mi&lt;/pre&gt; &lt;h2&gt;Create a service.yml File&lt;/h2&gt; &lt;p&gt;In order for Istio to treat the traffic to our app as HTTP, we need to create a &lt;code&gt;service.yml&lt;/code&gt; file in the &lt;code&gt;.nodeshift&lt;/code&gt; folder and the file needs to contain the following:&lt;/p&gt; &lt;pre&gt;spec:  ports:  - name: http   port: 8080   protocol: TCP   targetPort: 8080&lt;/pre&gt; &lt;h2&gt;Redeploy the Application&lt;/h2&gt; &lt;p&gt;First, delete the existing deployment configuration:&lt;/p&gt; &lt;pre&gt;$ oc delete dc/nodejs-health-check-redhat $ oc delete service nodejs-health-check-redhat $ oc delete route nodejs-health-check-redhat&lt;/pre&gt; &lt;p&gt;Run &lt;code&gt;npm run openshift&lt;/code&gt; to redeploy the application.&lt;/p&gt; &lt;p&gt;Once the deployment is complete, you should see the following in the OpenShift console:&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-500277 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-06-at-9.42.13-AM-1024x197.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-06-at-9.42.13-AM-1024x197.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-06-at-9.42.13-AM-1024x197.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-06-at-9.42.13-AM-300x58.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-06-at-9.42.13-AM-768x147.png 768w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note: The screenshot above is showing there are now two containers ready (2/2) in the nodejs-health-check-redhat pod, which indicates the Istio sidecar proxy is running alongside the app container.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;When you click on the running pod, you should see the list of containers as follows:&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-500287 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-06-at-9.27.45-AM-1024x454.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-06-at-9.27.45-AM-1024x454.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-06-at-9.27.45-AM-1024x454.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-06-at-9.27.45-AM-300x133.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-06-at-9.27.45-AM-768x340.png 768w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;p&gt;Navigate to the UI route, for example, &lt;code&gt;http://nodejs-health-check-redhat-rhoar.router.default.svc.cluster.local/&lt;/code&gt;, and perform a number of requests. It is also worth clicking the &lt;strong&gt;Stop Service&lt;/strong&gt; button to test how Istio handles the service being unavailable.&lt;/p&gt; &lt;h2&gt;Check the Results in Istio&lt;/h2&gt; &lt;p&gt;If you now look at the &lt;code&gt;grafana&lt;/code&gt; route we created in the &lt;code&gt;istio-system&lt;/code&gt; project, you should see something like the screenshot below, which clearly shows the traffic to our application with response times, failure, and success rates.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-500297 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-01-at-3.43.39-PM-1024x534.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-01-at-3.43.39-PM-1024x534.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-01-at-3.43.39-PM-1024x534.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-01-at-3.43.39-PM-300x157.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-01-at-3.43.39-PM-768x401.png 768w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;p&gt;Looking at the Jaeger console, you should also see a significant amount of activity, for example:&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-500307 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-01-at-3.45.38-PM-1024x518.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-01-at-3.45.38-PM-1024x518.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-01-at-3.45.38-PM-1024x518.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-01-at-3.45.38-PM-300x152.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/Screen-Shot-2018-06-01-at-3.45.38-PM-768x389.png 768w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;h2&gt;Summing Up&lt;/h2&gt; &lt;p&gt;Building container-based solutions can seem like a challenging task that adds a lot of overhead for application developers. Using a combination of RHOAR and Istio will take care of a lot of these considerations, leaving application developers to focus on implementing the business logic.&lt;/p&gt; &lt;p&gt;These tools make it a lot easier for developers to control the deployment of their application to OpenShift, interact with the service orchestration framework, monitor the performance of their application, understand how the application relates to other applications (service mesh), and also introduce and test system faults. Developers don&amp;#8217;t need to learn how to containerize their application or implement any metrics or tracing tools at the application level; this is all provided with minimal configuration.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F11%2Fcontainer-native-nodejs-istio-rhoar%2F&amp;#38;linkname=Building%20Container-Native%20Node.js%20Applications%20with%20Red%20Hat%20OpenShift%20Application%20Runtimes%20and%20Istio" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F11%2Fcontainer-native-nodejs-istio-rhoar%2F&amp;#38;linkname=Building%20Container-Native%20Node.js%20Applications%20with%20Red%20Hat%20OpenShift%20Application%20Runtimes%20and%20Istio" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F11%2Fcontainer-native-nodejs-istio-rhoar%2F&amp;#38;linkname=Building%20Container-Native%20Node.js%20Applications%20with%20Red%20Hat%20OpenShift%20Application%20Runtimes%20and%20Istio" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F11%2Fcontainer-native-nodejs-istio-rhoar%2F&amp;#38;linkname=Building%20Container-Native%20Node.js%20Applications%20with%20Red%20Hat%20OpenShift%20Application%20Runtimes%20and%20Istio" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F11%2Fcontainer-native-nodejs-istio-rhoar%2F&amp;#38;linkname=Building%20Container-Native%20Node.js%20Applications%20with%20Red%20Hat%20OpenShift%20Application%20Runtimes%20and%20Istio" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F11%2Fcontainer-native-nodejs-istio-rhoar%2F&amp;#38;linkname=Building%20Container-Native%20Node.js%20Applications%20with%20Red%20Hat%20OpenShift%20Application%20Runtimes%20and%20Istio" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F11%2Fcontainer-native-nodejs-istio-rhoar%2F&amp;#38;linkname=Building%20Container-Native%20Node.js%20Applications%20with%20Red%20Hat%20OpenShift%20Application%20Runtimes%20and%20Istio" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F11%2Fcontainer-native-nodejs-istio-rhoar%2F&amp;#38;linkname=Building%20Container-Native%20Node.js%20Applications%20with%20Red%20Hat%20OpenShift%20Application%20Runtimes%20and%20Istio" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F11%2Fcontainer-native-nodejs-istio-rhoar%2F&amp;#38;title=Building%20Container-Native%20Node.js%20Applications%20with%20Red%20Hat%20OpenShift%20Application%20Runtimes%20and%20Istio" data-a2a-url="https://developers.redhat.com/blog/2018/06/11/container-native-nodejs-istio-rhoar/" data-a2a-title="Building Container-Native Node.js Applications with Red Hat OpenShift Application Runtimes and Istio"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/06/11/container-native-nodejs-istio-rhoar/"&gt;Building Container-Native Node.js Applications with Red Hat OpenShift Application Runtimes and Istio&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/uCO0_-dEqM0" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;For developers working on a Kubernetes-based application environment such as Red Hat OpenShift, there are a number things that need to be considered to fully take advantage of the significant benefits provided by these technologies, including: How do I communicate with the orchestration layer to indicate the application is operating correctly and is available to [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/06/11/container-native-nodejs-istio-rhoar/"&gt;Building Container-Native Node.js Applications with Red Hat OpenShift Application Runtimes and Istio&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/06/11/container-native-nodejs-istio-rhoar/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">500057</post-id><dc:creator>Philip Hayes</dc:creator><dc:date>2018-06-11T11:00:57Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/06/11/container-native-nodejs-istio-rhoar/</feedburner:origLink></entry></feed>
